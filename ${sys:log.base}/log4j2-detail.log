[INFO] DetailLog:108 - modification points created: 
[INFO] DetailLog:111 - 0- MP=org.jfree.data.time.Week line: 175, pointed element: CtFieldReadImpl, codeElement: org.jfree.data.time.RegularTimePeriod.DEFAULT_TIME_ZONE
[INFO] DetailLog:111 - 1- MP=org.jfree.data.time.Week line: 175, pointed element: CtInvocationImpl, codeElement: this(time, org.jfree.data.time.RegularTimePeriod.DEFAULT_TIME_ZONE, java.util.Locale.getDefault())
[INFO] DetailLog:108 - modification points created: 
[INFO] DetailLog:111 - 0- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 1- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl, codeElement: (real == 0.0)
[INFO] DetailLog:111 - 2- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 3- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl, codeElement: (imaginary == 0.0)
[INFO] DetailLog:111 - 4- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl, codeElement: (real == 0.0) && (imaginary == 0.0)
[INFO] DetailLog:111 - 5- MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtIfImpl, codeElement: if ((real == 0.0) && (imaginary == 0.0)) {
	return org.apache.commons.math3.complex.Complex.NaN;
}
[INFO] DetailLog:111 - 6- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 7- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtInvocationImpl, codeElement: org.apache.commons.math3.util.FastMath.abs(real)
[INFO] DetailLog:111 - 8- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 9- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtInvocationImpl, codeElement: org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:111 - 10- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtBinaryOperatorImpl, codeElement: org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:111 - 11- MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtIfImpl, codeElement: if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {
	double q = real / imaginary;
	double scale = 1.0 / ((real * q) + imaginary);
	return createComplex(scale * q, -scale);
} else {
	double q = imaginary / real;
	double scale = 1.0 / ((imaginary * q) + real);
	return createComplex(scale, (-scale) * q);
}
[INFO] DetailLog:111 - 12- MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 13- MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 14- MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtBinaryOperatorImpl, codeElement: real / imaginary
[INFO] DetailLog:111 - 15- MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtLocalVariableImpl, codeElement: double q = real / imaginary
[INFO] DetailLog:111 - 16- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtLiteralImpl, codeElement: 1.0
[INFO] DetailLog:111 - 17- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 18- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtVariableReadImpl, codeElement: q
[INFO] DetailLog:111 - 19- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl, codeElement: (real * q)
[INFO] DetailLog:111 - 20- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 21- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl, codeElement: ((real * q) + imaginary)
[INFO] DetailLog:111 - 22- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl, codeElement: 1.0 / ((real * q) + imaginary)
[INFO] DetailLog:111 - 23- MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtLocalVariableImpl, codeElement: double scale = 1.0 / ((real * q) + imaginary)
[INFO] DetailLog:111 - 24- MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 25- MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 26- MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtBinaryOperatorImpl, codeElement: imaginary / real
[INFO] DetailLog:111 - 27- MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtLocalVariableImpl, codeElement: double q = imaginary / real
[INFO] DetailLog:111 - 28- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtLiteralImpl, codeElement: 1.0
[INFO] DetailLog:111 - 29- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtFieldReadImpl, codeElement: imaginary
[INFO] DetailLog:111 - 30- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtVariableReadImpl, codeElement: q
[INFO] DetailLog:111 - 31- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl, codeElement: (imaginary * q)
[INFO] DetailLog:111 - 32- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtFieldReadImpl, codeElement: real
[INFO] DetailLog:111 - 33- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl, codeElement: ((imaginary * q) + real)
[INFO] DetailLog:111 - 34- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl, codeElement: 1.0 / ((imaginary * q) + real)
[INFO] DetailLog:111 - 35- MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtLocalVariableImpl, codeElement: double scale = 1.0 / ((imaginary * q) + real)
[INFO] DetailLog:111 - 36- MP=org.apache.commons.math3.complex.Complex line: 305, pointed element: CtFieldReadImpl, codeElement: org.apache.commons.math3.complex.Complex.NaN
[INFO] DetailLog:111 - 37- MP=org.apache.commons.math3.complex.Complex line: 305, pointed element: CtReturnImpl, codeElement: return org.apache.commons.math3.complex.Complex.NaN
[INFO] DetailLog:156 - ----------------- Generation 1
[INFO] DetailLog:157 - after apply crossover, we got 38 variants to mutate.
[INFO] DetailLog:549 - [Variant id: 0, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 1, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 2, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 3, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 4, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 5, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 6, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 7, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 8, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 9, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 10, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 11, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 12, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 13, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 14, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 15, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 16, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 17, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 18, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 19, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 20, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 21, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 22, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 23, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 24, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 25, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 26, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 27, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 28, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 29, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 30, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 31, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 32, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 33, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 34, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 35, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 36, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[INFO] DetailLog:549 - [Variant id: 37, #gens: 38, #ops: 0, parent:-] fitness: 1.0
[DEBUG] DetailLog:437 - BaseElements for 304-if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtIfImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)
[DEBUG] DetailLog:549 - new modification added. element: ZERO
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.util.MathUtils.checkNotNull(ZERO)
[DEBUG] DetailLog:437 - BaseElements for 312-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtFieldReadImpl: size: 433 ["NaN","I","isInfinite()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","pos.setBeginIndex(real)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","real + addend","false","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sqrt(real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cosh(real)","(imaginary == 0.0)","im.doubleValue() * sign","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","abs()","divisor.isInfinite() && (!isInfinite())","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real * q)","pos.setErrorIndex(real)","2.0 * real","-im","q.getQ3()","2.0","(!isInfinite())","java.lang.Double.isNaN(real)","subtrahend.getImaginary()","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","org.apache.commons.math3.util.FastMath.abs(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","20092012L","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","i - 1","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.sin(real2) / d","1.0","(q * q)","v[0]","(imaginary * q)","getNorm()","getImaginary()","omegaImaginaryCounterClockwise[i]","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","0.0","java.lang.Double.isInfinite(factor)","k++","(q1.getQ2() * q2.getQ2())","result.add(org.apache.commons.math3.complex.Complex.INF)","6195664516687396620L","true","pos.setBeginIndex(0)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real >= 0.0","q2 / norm","real < (-20.0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(imaginaryPart)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(divisor)","INF","ONE","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real)","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","result.add(createComplex(realPart, imaginaryPart))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","parsePosition.getIndex()","obj instanceof org.apache.commons.math3.complex.Complex","imaginary + addend.getImaginary()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(omegaReal[i - 1] * sinT)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-q2)","getQ3()","r * org.apache.commons.math3.util.FastMath.cos(theta)","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","getArgument()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q2.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary)","divisor.getImaginary()","ZERO","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cosh(imaginary)","addend.getImaginary()","!isInfinite()","subtrahend.getReal()","20.0","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","(imaginary * factor.imaginary)","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(real)","isNaN || subtrahend.isNaN","37","r < 0","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","imaginary","divisor.getReal()","i < absN","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","pos.setEndIndex(real)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","q1.getQ3() - q2.getQ3()","n > 0","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","java.lang.Double.isNaN(addend)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","(real == c.real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","(-20.0)","1.0 / n","real + addend.getReal()","i++","1.0 / ((real * q) + imaginary)","(q1a * q2a)","real * factor","q1.getQ0() + q2.getQ0()","toAppendTo.setLength(real)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.cos(real2)","isNaN","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.abs(d)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","pos.setIndex(real)","org.apache.commons.math3.util.FastMath.sinh(real2)","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","org.apache.commons.math3.util.FastMath.log(real)","-1.0","imaginaryCharacter.length() == 0","unitQ.getQ1()","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.abs(real)","getQ0() < 0","((imaginary * q) + real) / denominator","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(divisor)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","(q1c * q2b)","(31 * result)","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","7","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-6195664516687396620L","isInfinite","((double.) (real))","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)"]
[DEBUG] DetailLog:460 - choose ingredient: ((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))
[DEBUG] DetailLog:479 - add used element: ((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))
[DEBUG] DetailLog:437 - BaseElements for 304-(real == 0.0) && (imaginary == 0.0)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl: size: 1007 ["((real == 0.0) && imaginary) == 0.0","ZERO","I","org.apache.commons.math3.util.FastMath.cosh(real)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","((real == 0.0) && (imaginary == 0.0)) || (format == null)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isInfinite(real))","((real == 0.0) && (imaginary == 0.0)) || (alpha * q3)","((real == 0.0) && (imaginary == 0.0)) || ((org.apache.commons.math3.util.Precision.equals(real, q.getQ0(), imaginary) && org.apache.commons.math3.util.Precision.equals(isNaN, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","((real == 0.0) && (imaginary == 0.0)) && (((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps))","((real == 0.0) && (imaginary == 0.0)) && ((im > 0.0) || java.lang.Double.isNaN(im))","q2.getQ3()","((real == 0.0) && (imaginary == 0.0)) || ((((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d))","((real == 0.0) && (imaginary == 0.0)) || ((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","((real == 0.0) && (imaginary == 0.0)) && (imaginary / (2.0 * t))","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ2() + q2.getQ2())","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","((real == 0.0) && (imaginary == 0.0)) && ((q0 == q.getQ0()) && (q1 == q.getQ1()))","((real == 0.0) && (imaginary == 0.0)) && ((((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3()))","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","c","im.doubleValue()","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(im)","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","((real == 0.0) && (imaginary == 0.0)) || (real * factor)","((real == 0.0) && (imaginary == 0.0)) || (im > 0.0)","format == null","((real == 0.0) && (imaginary == 0.0)) || ((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","squareNorm","((real == 0.0) && (imaginary == 0.0)) && (norm < org.apache.commons.math3.util.Precision.SAFE_MIN)","q0 / norm","-unitQ.getQ3()","((real == 0.0) && (imaginary == 0.0)) || (imaginary * factor)","org.apache.commons.math3.util.MathUtils.hash(comp)","((real == 0.0) && (imaginary == 0.0)) && (real - subtrahend)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || factor.isNaN)","omegaImaginaryClockwise[0]","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sinh(real2) / d)","((real == 0.0) && (imaginary == 0.0)) || ((((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c))","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ3() + q2.getQ3())","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(realPart)","java.lang.Double.isInfinite(factor.imaginary)","getArgument()","((real == 0.0) && (imaginary == 0.0)) || (d / c)","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1d","q1.getQ2() - q2.getQ2()","((real == 0.0) && (imaginary == 0.0)) || (parsePosition.getIndex() == 0)","imaginary == 0.0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","startIndex","toAppendTo.setLength(0)","((real == 0.0) && (imaginary == 0.0)) || (real >= 0.0)","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","q0 / squareNorm","((real == 0.0) && (imaginary == 0.0)) || (r * org.apache.commons.math3.util.FastMath.sin(theta))","(q1 * q1)","((real == 0.0) && (imaginary == 0.0)) || ((omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT))","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","((real == 0.0) && (imaginary == 0.0)) || ((q1a * q2c) - (q1b * q2d))","k","imaginaryPart","((real == 0.0) && (imaginary == 0.0)) && result.add(org.apache.commons.math3.complex.Complex.INF)","nthRootOfAbs","((real == 0.0) && (imaginary == 0.0)) && ((-scale) * q)","((real == 0.0) && (imaginary == 0.0)) && (real < (-20.0))","(q1c * q2c)","((real == 0.0) && (imaginary == 0.0)) && (q1a * q2b)","((real == 0.0) && (imaginary == 0.0)) && (q0 * q0)","innerPart","re == null","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","((real == 0.0) && (imaginary == 0.0)) && (c / d)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","c / d","((real == 0.0) && (imaginary == 0.0)) || (q1b * q2d)","n","((real == 0.0) && (imaginary == 0.0)) && (scale * q)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","omegaImaginaryClockwise[i]","((real == 0.0) && (imaginary == 0.0)) || (((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps))","q1c","((real == 0.0) && (imaginary == 0.0)) && (q1b * q2a)","((real == 0.0) && (imaginary == 0.0)) && (real + addend)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.real)","((real == 0.0) && (imaginary == 0.0)) && (omegaImaginaryCounterClockwise[i - 1] * sinT)","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real == 0.0) && (imaginary == 0.0)) && (expReal * org.apache.commons.math3.util.FastMath.cos(imaginary))","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","((real == 0.0) && (imaginary == 0.0)) || (q2 == q.getQ2())","((real == 0.0) && (imaginary == 0.0)) || ((d * q) + c)","((real == 0.0) && (imaginary == 0.0)) && (imaginary > 20.0)","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","(q0 * q0)","((real == 0.0) && (imaginary == 0.0)) || ((q0 * q0) + (q1 * q1))","((real == 0.0) && (imaginary == 0.0)) || (imaginaryCharacter.length() == 0)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sin(real2) / d)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sinh(real2) / d)","(q1b * q2b)","((real == 0.0) && (imaginary == 0.0)) || (n == 0)","(real * factor.imaginary) + (imaginary * factor.real)","((real == 0.0) && (imaginary == 0.0)) || (real - subtrahend.getReal())","(k >= omegaCount)","((real == 0.0) && (imaginary == 0.0)) || (q1c * q2c)","pos.setErrorIndex(startIndex)","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","((real == 0.0) && (imaginary == 0.0)) && (other instanceof org.apache.commons.math3.complex.Complex)","cosT","((real == 0.0) && (imaginary == 0.0)) || (2 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.FastMath.cos(imaginary)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","((real == 0.0) && (imaginary == 0.0)) || (imaginaryCharacter == null)","c.isNaN","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(real) + abs())","((real == 0.0) && (imaginary == 0.0)) && divisor.isInfinite()","((real == 0.0) && (imaginary == 0.0)) || divisor.isInfinite()","imaginary + addend.getImaginary()","((real == 0.0) && (imaginary == 0.0)) && (isNaN || divisor.isNaN)","((real == 0.0) && (imaginary == 0.0)) && (imaginaryCharacter == null)","obj instanceof org.apache.commons.math3.complex.Complex","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(realPart)","((real == 0.0) && (imaginary == 0.0)) && (imaginary == 0.0)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","((real == 0.0) && (imaginary == 0.0)) && (q1a * q2c)","(-q2)","((real == 0.0) && (imaginary == 0.0)) && (v.length != 3)","getQ3()","((real == 0.0) && (imaginary == 0.0)) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(imaginary)","java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.log(abs())","((real == 0.0) && (imaginary == 0.0)) && (real == 0.0)","((real == 0.0) && (imaginary == 0.0)) && ((omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT))","((real == 0.0) && (imaginary == 0.0)) && ((real * q) + imaginary)","((real == 0.0) && (imaginary == 0.0)) && ((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","((real == 0.0) && (imaginary == 0.0)) || (i < real.length)","((real == 0.0) && (imaginary == 0.0)) || result.add(createComplex(realPart, imaginaryPart))","((real == 0.0) && (imaginary == 0.0)) && ((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","((real == 0.0) && (imaginary == 0.0)) && (q3 / norm)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ0() - q2.getQ0())","alpha * q1","((real == 0.0) && (imaginary == 0.0)) && (n > 0)","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((real == 0.0) && (imaginary == 0.0)) || ((imaginary * q) - real)","((real == 0.0) && (imaginary == 0.0)) || ((((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b))","b","((real == 0.0) && (imaginary == 0.0)) || (real + addend)","((imaginary * q) + real)","((real == 0.0) && (imaginary == 0.0)) || (nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart))","((real == 0.0) && (imaginary == 0.0)) && ((c * q) + d)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","factor.real","((real == 0.0) && (imaginary == 0.0)) || (2.0 * org.apache.commons.math3.util.FastMath.PI)","((real == 0.0) && (imaginary == 0.0)) || (nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart))","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(factor.real)","((real == 0.0) && (imaginary == 0.0)) && (d == 0.0)","((real == 0.0) && (imaginary == 0.0)) || ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","((real == 0.0) && (imaginary == 0.0)) || (v.length != 3)","((real == 0.0) && (imaginary == 0.0)) || (alpha * q2)","org.apache.commons.math3.util.FastMath.cos(t)","(q1d * q2a)","((real == 0.0) && (imaginary == 0.0)) && (k < n)","((real * q) + imaginary)","((real == 0.0) && (imaginary == 0.0)) || ((((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a))","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isNaN(addend))","((real == 0.0) && (imaginary == 0.0)) && (2.0 * imaginary)","isNaN || subtrahend.isNaN","((real == 0.0) && (imaginary == 0.0)) || (q1d * q2b)","((real == 0.0) && (imaginary == 0.0)) && (getArgument() / n)","((real == 0.0) && (imaginary == 0.0)) && ((2.0 * org.apache.commons.math3.util.FastMath.PI) / absN)","r < 0","37","((real == 0.0) && (imaginary == 0.0)) && (real * factor)","org.apache.commons.math3.util.FastMath.cosh(real2)","((real == 0.0) && (imaginary == 0.0)) || (1 + (q * q))","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real == 0.0) && (imaginary == 0.0)) || ((q1a * q2b) + (q1b * q2a))","isNaN || addend.isNaN","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","q.getQ2()","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2))","((real == 0.0) && (imaginary == 0.0)) && (imaginary / divisor)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.sin(imaginary)","((real == 0.0) && (imaginary == 0.0)) || (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart))","((real == 0.0) && (imaginary == 0.0)) || (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((real == 0.0) && (imaginary == 0.0)) && ((org.apache.commons.math3.util.Precision.equals(real, q.getQ0(), imaginary) && org.apache.commons.math3.util.Precision.equals(isNaN, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","((real == 0.0) && (imaginary == 0.0)) || ((q1a * q2d) + (q1b * q2c))","((real == 0.0) && (imaginary == 0.0)) || (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN)","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","((real == 0.0) && (imaginary == 0.0)) || (divisor == 0.0)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","((real == 0.0) && (imaginary == 0.0)) && (real / divisor)","addend.getImaginary()","divisor.getImaginary()","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(factor)","((real == 0.0) && (imaginary == 0.0)) && (((real * q) + imaginary) / denominator)","imaginary * factor","(omegaReal[i - 1] * sinT)","((real == 0.0) && (imaginary == 0.0)) && ((q0 * q0) + (q1 * q1))","((real == 0.0) && (imaginary == 0.0)) || (real / imaginary)","((real == 0.0) && (imaginary == 0.0)) || ((imaginary - (real * q)) / denominator)","((real == 0.0) && (imaginary == 0.0)) && (alpha * q3)","expReal","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","org.apache.commons.math3.util.MathUtils.hash(real)","(-org.apache.commons.math3.util.FastMath.sin(real))","imaginary / real","((real == 0.0) && (imaginary == 0.0)) && (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","((real == 0.0) && (imaginary == 0.0)) && (imaginary * factor.real)","z","((real == 0.0) && (imaginary == 0.0)) && (im.doubleValue() * sign)","(q1b * q2a)","((real == 0.0) && (imaginary == 0.0)) || ((im > 0.0) || java.lang.Double.isNaN(im))","result.add(createComplex(realPart, imaginaryPart))","((real == 0.0) && (imaginary == 0.0)) || (real * q)","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","((real == 0.0) && (imaginary == 0.0)) || (2.0 * real)","((real == 0.0) && (imaginary == 0.0)) || (real > 20.0)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(2 * org.apache.commons.math3.util.FastMath.PI)","((real == 0.0) && (imaginary == 0.0)) && (q1d * q2a)","((real == 0.0) && (imaginary == 0.0)) || (imaginary / real)","((real == 0.0) && (imaginary == 0.0)) && (imaginary < (-20.0))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","((real == 0.0) && (imaginary == 0.0)) && (im < 0.0)","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ0() + q2.getQ0())","imaginary < (-20.0)","subtrahend.getReal()","((real == 0.0) && (imaginary == 0.0)) || (isNaN || addend.isNaN)","real - subtrahend","realPart","((real == 0.0) && (imaginary == 0.0)) && (isNaN || factor.isNaN)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2))","((real * q) + imaginary) / denominator","((real == 0.0) && (imaginary == 0.0)) && (d / c)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isNaN(divisor))","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ2() + q2.getQ2())","imaginaryFormat == null","((real == 0.0) && (imaginary == 0.0)) && ((k < 0) || (k >= omegaCount))","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","((real == 0.0) && (imaginary == 0.0)) || (q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.cos(theta)","((real == 0.0) && (imaginary == 0.0)) && ((imaginary * q) + real)","(-q3) / squareNorm","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","q2","(imaginary * factor.imaginary)","((real == 0.0) && (imaginary == 0.0)) || (getArgument() / n)","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ3() * q2.getQ3())","!isInfinite()","-scale","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((real == 0.0) && (imaginary == 0.0)) || (imaginary / divisor)","((real == 0.0) && (imaginary == 0.0)) && (q0 / squareNorm)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((real == 0.0) && (imaginary == 0.0)) || (omegaCount == 0)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || divisor.isNaN)","(q1a * q2c)","(im > 0.0)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((real == 0.0) && (imaginary == 0.0)) || ((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","(c == 0.0)","((real == 0.0) && (imaginary == 0.0)) && (n <= 0)","((real == 0.0) && (imaginary == 0.0)) && (alpha * q2)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","real == 0.0","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(real)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary))","r","(31 * result)","((real == 0.0) && (imaginary == 0.0)) && (37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real)))","(q1c * q2b)","norm","((real == 0.0) && (imaginary == 0.0)) && ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isNaN(addend))","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sin(real2) / d)","divisor.isInfinite()","getArgument() / n","((real == 0.0) && (imaginary == 0.0)) && (im > 0.0)","((real == 0.0) && (imaginary == 0.0)) || (31 * result)","((real == 0.0) && (imaginary == 0.0)) && (q1b * q2b)","((real == 0.0) && (imaginary == 0.0)) || toAppendTo.toString().equals("1")","unitQ.getQ0()","(-scale) * q","imaginaryCharacter == null","((real == 0.0) && (imaginary == 0.0)) && (q1b * q2c)","((real == 0.0) && (imaginary == 0.0)) && (2.0 * org.apache.commons.math3.util.FastMath.PI)","((real == 0.0) && (imaginary == 0.0)) && toAppendTo.toString().equals("1")","((real == 0.0) && (imaginary == 0.0)) || (q1b * q2c)","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","scalar","((real == 0.0) && (imaginary == 0.0)) || (divisor.isInfinite() && (!isInfinite()))","((real == 0.0) && (imaginary == 0.0)) || (real / divisor)","(q1b * q2d)","7","((real == 0.0) && (imaginary == 0.0)) || (r * org.apache.commons.math3.util.FastMath.cos(theta))","((real == 0.0) && (imaginary == 0.0)) || ((-q3) / squareNorm)","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","java.lang.Double.isNaN(imaginary)","((real == 0.0) && (imaginary == 0.0)) && (q * q)","((real == 0.0) && (imaginary == 0.0)) && ((d * q) + c)","((real == 0.0) && (imaginary == 0.0)) && (n == 0)","(q1c * q2a)","((real == 0.0) && (imaginary == 0.0)) || (alpha * q0)","((real == 0.0) && (imaginary == 0.0)) || (q * q)","realFormat == null","scale * q","((real == 0.0) && (imaginary == 0.0)) && (imaginaryCharacter.length() == 0)","((real == 0.0) && (imaginary == 0.0)) && (q1c * q2a)","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","((real == 0.0) && (imaginary == 0.0)) && (parsePosition.getIndex() == 0)","q1.getQ1() + q2.getQ1()","((real == 0.0) && (imaginary == 0.0)) && (alpha * q0)","(2.0 * t)","java.lang.Double.isNaN(divisor)","((real == 0.0) && (imaginary == 0.0)) && (omegaCount - 1)","-6195664516687396620L","NaN","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(addend)","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ1() + q2.getQ1())","real >= 0.0","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ3() + q2.getQ3())","q2 / norm","((real == 0.0) && (imaginary == 0.0)) || (d * q)","((real == 0.0) && (imaginary == 0.0)) || (1.0 / n)","q2d","((real == 0.0) && (imaginary == 0.0)) || (im == null)","((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2d) + (q1b * q2c))","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","real < (-20.0)","((real == 0.0) && (imaginary == 0.0)) && (r * org.apache.commons.math3.util.FastMath.cos(theta))","slice","factor.imaginary","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","((real == 0.0) && (imaginary == 0.0)) && (java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary))","((real == 0.0) && (imaginary == 0.0)) && ((31 * result) + c)","(q * q)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","(imaginary * q)","v[0]","((real == 0.0) && (imaginary == 0.0)) && (omegaCount == 0)","((real == 0.0) && (imaginary == 0.0)) && (imaginary == c.imaginary)","getNorm()","((real == 0.0) && (imaginary == 0.0)) || ((c == 0.0) && (d == 0.0))","((real == 0.0) && (imaginary == 0.0)) && (imaginary - subtrahend.getImaginary())","((real == 0.0) && (imaginary == 0.0)) && (omegaReal[i - 1] * cosT)","((real == 0.0) && (imaginary == 0.0)) && (q1d * q2d)","((real == 0.0) && (imaginary == 0.0)) || ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor))","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isInfinite(imaginary))","sinT","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ0() * q2.getQ0())","((real == 0.0) && (imaginary == 0.0)) || ((-q1) / squareNorm)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","java.lang.Double.isNaN(imaginaryPart)","((real == 0.0) && (imaginary == 0.0)) || (((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","result.add(org.apache.commons.math3.complex.Complex.INF)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(imaginary)","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","20092012L","(q3 == q.getQ3())","((real == 0.0) && (imaginary == 0.0)) && (getQ0() < 0)","1.0","real.length","((real == 0.0) && (imaginary == 0.0)) || (1.0 / ((real * q) + imaginary))","i - 1","((q0 * q0) + (q1 * q1))","((real == 0.0) && (imaginary == 0.0)) || (n > 0)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isNaN(factor))","addend.isNaN","org.apache.commons.math3.util.FastMath.sinh(real)","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","((real == 0.0) && (imaginary == 0.0)) || ((-scale) * q)","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","((real == 0.0) && (imaginary == 0.0)) && (((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","((real == 0.0) && (imaginary == 0.0)) || (q1c * q2a)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","org.apache.commons.math3.util.FastMath.sin(imaginary2)","INF","ONE","1","imaginary2","alpha","2","i < real.length","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isCounterClockWise","((real == 0.0) && (imaginary == 0.0)) && (real * factor.real)","omegaReal[i - 1]","((real == 0.0) && (imaginary == 0.0)) || (obj instanceof java.lang.Number)","isNaN || java.lang.Double.isNaN(factor)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary))","comp","((real == 0.0) && (imaginary == 0.0)) && (q2 / norm)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","initialIndex","((real == 0.0) && (imaginary == 0.0)) || (q0 * q0)","-1","((real == 0.0) && (imaginary == 0.0)) || (alpha * q1)","20120201L","((real == 0.0) && (imaginary == 0.0)) && (alpha * q1)","q1","((real == 0.0) && (imaginary == 0.0)) || (q1a * q2c)","(c == 0.0) && (d == 0.0)","scale","k < n","((real == 0.0) && (imaginary == 0.0)) && (2.0 * real)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","((real == 0.0) && (imaginary == 0.0)) || (re == null)","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","real / divisor","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ2() - q2.getQ2())","d / c","org.apache.commons.math3.util.FastMath.sin(real)","((real == 0.0) && (imaginary == 0.0)) && ((((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c))","(omegaImaginaryCounterClockwise[i - 1] * sinT)","pos.getIndex()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","isInfinite()","((real == 0.0) && (imaginary == 0.0)) && isInfinite()","java.lang.Double.isInfinite(factor.real)","v[1]","((real == 0.0) && (imaginary == 0.0)) || ((real * q) + imaginary)","((real == 0.0) && (imaginary == 0.0)) && (d * q)","((real == 0.0) && (imaginary == 0.0)) || (q1a * q2b)","((real == 0.0) && (imaginary == 0.0)) && (((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","((real == 0.0) && (imaginary == 0.0)) || (imaginary * factor.real)","((real == 0.0) && (imaginary == 0.0)) || (omegaReal[i - 1] * cosT)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","((real == 0.0) && (imaginary == 0.0)) || (imaginary + addend.getImaginary())","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isInfinite(real))","((real == 0.0) && (imaginary == 0.0)) || (q0 == q.getQ0())","((imaginary * q) - real)","((real == 0.0) && (imaginary == 0.0)) && ((-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","eps","im.doubleValue() * sign","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isNaN(subtrahend))","omegaReal[0]","(omegaReal[i - 1] * cosT)","((real == 0.0) && (imaginary == 0.0)) || (q3 == q.getQ3())","omegaReal[i]","-unitQ.getQ0()","w","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","im","((real == 0.0) && (imaginary == 0.0)) && ((real * factor.imaginary) + (imaginary * factor.real))","q1b","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","((real == 0.0) && (imaginary == 0.0)) && (real / imaginary)","((real == 0.0) && (imaginary == 0.0)) && (im == null)","((real == 0.0) && (imaginary == 0.0)) && (this == other)","q3","((real == 0.0) && (imaginary == 0.0)) || (n <= 0)","((real == 0.0) && (imaginary == 0.0)) && (imaginaryFormat == null)","false","((real == 0.0) && (imaginary == 0.0)) || (imaginary * q)","((real == 0.0) && (imaginary == 0.0)) && ((imaginary * q) - real)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","((real == 0.0) && (imaginary == 0.0)) || (q2 * q2)","q0","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","((real == 0.0) && (imaginary == 0.0)) || (imaginary - subtrahend.getImaginary())","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","((real == 0.0) && (imaginary == 0.0)) && (q1c * q2d)","alpha * q0","((real == 0.0) && (imaginary == 0.0)) && (i < absN)","unitQ.getQ3()","((real == 0.0) && (imaginary == 0.0)) && (obj instanceof org.apache.commons.math3.complex.Complex)","(q1b * q2c)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (realFormat == null)","1.0 / ((imaginary * q) + real)","v[2]","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isNaN(subtrahend))","absIm","(real * factor.imaginary)","((real == 0.0) && (imaginary == 0.0)) || (c == 0.0)","(d == 0.0)","real + addend","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(-scale)","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isNaN(divisor))","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","real[i]","((real == 0.0) && (imaginary == 0.0)) && (31 * result)","((real == 0.0) && (imaginary == 0.0)) || isInfinite()","(!isInfinite())","((real == 0.0) && (imaginary == 0.0)) || ((q1a * q2a) - (q1b * q2b))","((real == 0.0) && (imaginary == 0.0)) || ((q0 == q.getQ0()) && (q1 == q.getQ1()))","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","((real == 0.0) && (imaginary == 0.0)) || (((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(factor.imaginary)","((real == 0.0) && (imaginary == 0.0)) && (imaginary * q)","((real == 0.0) && (imaginary == 0.0)) || (q1c * q2d)","(q2 == q.getQ2())","-imaginary","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(factor)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.PI","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ0() * q2.getQ0())","((real == 0.0) && (imaginary == 0.0)) || (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (imaginary > 20.0)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d))","31","((real == 0.0) && (imaginary == 0.0)) && (expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","toAppendTo.toString().equals("1")","((real == 0.0) && (imaginary == 0.0)) && (real >= 0.0)","((real == 0.0) && (imaginary == 0.0)) || (omegaCount - 1)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ1() * q2.getQ1())","((real == 0.0) && (imaginary == 0.0)) || (k >= omegaCount)","omegaCount - 1","((real == 0.0) && (imaginary == 0.0)) && (q1 / norm)","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","((real == 0.0) && (imaginary == 0.0)) || ((omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT))","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","(real == c.real) && (imaginary == c.imaginary)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(factor)","((real == 0.0) && (imaginary == 0.0)) || (imaginary / (2.0 * t))","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps)","((real == 0.0) && (imaginary == 0.0)) || (((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","((real == 0.0) && (imaginary == 0.0)) && (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (q1d * q2c)","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","getQ0()","((real == 0.0) && (imaginary == 0.0)) && (q3 * q3)","((imaginary * q) - real) / denominator","((real == 0.0) && (imaginary == 0.0)) || (((imaginary * q) + real) / denominator)","((real == 0.0) && (imaginary == 0.0)) || (2.0 * t)","((real == 0.0) && (imaginary == 0.0)) && (divisor == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2c) - (q1b * q2d))","2.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","((real == 0.0) && (imaginary == 0.0)) && (1.0 / n)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","((real == 0.0) && (imaginary == 0.0)) && (2.0 * t)","((real == 0.0) && (imaginary == 0.0)) && (real > 20.0)","nthPhi","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ3() - q2.getQ3())","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","imaginary","org.apache.commons.math3.util.FastMath.abs(real)","-im","q.getQ3()","((real == 0.0) && (imaginary == 0.0)) && (real * factor.imaginary)","((real == 0.0) && (imaginary == 0.0)) || (q0 / squareNorm)","2.0 * real","((real == 0.0) && (imaginary == 0.0)) || (q3 * q3)","((real == 0.0) && (imaginary == 0.0)) && ((((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3()))","((real == 0.0) && (imaginary == 0.0)) && ((-q3) / squareNorm)","((real == 0.0) && (imaginary == 0.0)) && ((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","(real * q)","((real == 0.0) && (imaginary == 0.0)) || (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","((real == 0.0) && (imaginary == 0.0)) || (omegaImaginaryCounterClockwise[i - 1] * cosT)","re","((real == 0.0) && (imaginary == 0.0)) || ((real * factor.real) - (imaginary * factor.imaginary))","((real == 0.0) && (imaginary == 0.0)) && (isNaN || subtrahend.isNaN)","((real == 0.0) && (imaginary == 0.0)) || (isNaN || subtrahend.isNaN)","c.real","addend.getReal()","((real == 0.0) && (imaginary == 0.0)) || (q1d * q2a)","(q1d * q2d)","((real == 0.0) && (imaginary == 0.0)) || (q1 / norm)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","((real == 0.0) && (imaginary == 0.0)) && (absN == omegaCount)","(k < 0) || (k >= omegaCount)","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ1() - q2.getQ1())","((real == 0.0) && (imaginary == 0.0)) && ((omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT))","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","((real == 0.0) && (imaginary == 0.0)) || (i < absN)","((real == 0.0) && (imaginary == 0.0)) || ((((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3()))","org.apache.commons.math3.util.FastMath.cos(innerPart)","divisor.isNaN","((real == 0.0) && (imaginary == 0.0)) && (1.0 / ((imaginary * q) + real))","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ3() - q2.getQ3())","divisor == 0.0","((real == 0.0) && (imaginary == 0.0)) || (r < 0)","(31 * result) + c","abs()","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(imaginary)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(factor.imaginary)","isNaN || divisor.isNaN","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","(-20.0)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","((real == 0.0) && (imaginary == 0.0)) || (q1a * q2a)","absN","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","((real == 0.0) && (imaginary == 0.0)) || (real == 0.0)","isNaN || java.lang.Double.isNaN(divisor)","(q2 * q2)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(divisor)","((real == 0.0) && (imaginary == 0.0)) && ((!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)))","((real == 0.0) && (imaginary == 0.0)) || (imaginary == c.imaginary)","((real == 0.0) && (imaginary == 0.0)) && (q1 * q1)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","i","((real == 0.0) && (imaginary == 0.0)) || ((2.0 * org.apache.commons.math3.util.FastMath.PI) / absN)","1.0 / ((real * q) + imaginary)","((real == 0.0) && (imaginary == 0.0)) && (q1c * q2c)","real * factor","((real == 0.0) && (imaginary == 0.0)) && (q2 * q2)","(q1a * q2a)","java.lang.Double.POSITIVE_INFINITY","java.lang.Double.isNaN(addend)","((real == 0.0) && (imaginary == 0.0)) && (imaginary + addend.getImaginary())","(2 * org.apache.commons.math3.util.FastMath.PI) / n","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ0() + q2.getQ0())","((real == 0.0) && (imaginary == 0.0)) || (c * q)","((real == 0.0) && (imaginary == 0.0)) && (((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(q3 * q3)","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","((real == 0.0) && (imaginary == 0.0)) || (real * factor.imaginary)","n == 0","v.length != 3","(real == c.real)","((real == 0.0) && (imaginary == 0.0)) && (imaginary / real)","((real == 0.0) && (imaginary == 0.0)) && (obj instanceof java.lang.Number)","(q1a * q2b)","((real == 0.0) && (imaginary == 0.0)) || (i - 1)","((real == 0.0) && (imaginary == 0.0)) || (getQ0() < 0)","((real == 0.0) && (imaginary == 0.0)) || (real == c.real)","(q0 == q.getQ0())","getQ2()","((real == 0.0) && (imaginary == 0.0)) || (((q0 * q0) + (q1 * q1)) + (q2 * q2))","((real == 0.0) && (imaginary == 0.0)) || (absN == omegaCount)","q2c","org.apache.commons.math3.util.FastMath.cos(real2)","((real == 0.0) && (imaginary == 0.0)) || result.add(org.apache.commons.math3.complex.Complex.NaN)","q1.getQ0() + q2.getQ0()","((real == 0.0) && (imaginary == 0.0)) || ((real == c.real) && (imaginary == c.imaginary))","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","real + addend.getReal()","((real == 0.0) && (imaginary == 0.0)) || (d == 0.0)","((real == 0.0) && (imaginary == 0.0)) && (q1a * q2a)","i++","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(divisor)","real","isNaN","y","((real == 0.0) && (imaginary == 0.0)) && (((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","((real == 0.0) && (imaginary == 0.0)) || (isNaN || java.lang.Double.isInfinite(imaginary))","((real == 0.0) && (imaginary == 0.0)) && (q1 == q.getQ1())","(-q2) / squareNorm","-q3","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((real == 0.0) && (imaginary == 0.0)) && ((((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b))","((real == 0.0) && (imaginary == 0.0)) || (im.doubleValue() * sign)","-q1","q1.getQ2()","im == null","((real == 0.0) && (imaginary == 0.0)) || (this == other)","omegaImaginaryCounterClockwise[0]","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d))","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","q.getQ1()","(-q1) / squareNorm","((real == 0.0) && (imaginary == 0.0)) || ((2 * org.apache.commons.math3.util.FastMath.PI) / n)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","v.length","((real == 0.0) && (imaginary == 0.0)) || (q1d * q2d)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(imaginaryPart)","((real == 0.0) && (imaginary == 0.0)) || (java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (expReal * org.apache.commons.math3.util.FastMath.cos(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (obj instanceof org.apache.commons.math3.complex.Complex)","((real == 0.0) && (imaginary == 0.0)) || (((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(-q1)","((real == 0.0) && (imaginary == 0.0)) && (k >= omegaCount)","subtrahend.getImaginary()","((real == 0.0) && (imaginary == 0.0)) || ((((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3()))","((real == 0.0) && (imaginary == 0.0)) || (q2 / norm)","((real == 0.0) && (imaginary == 0.0)) || (2.0 * imaginary)","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","((real == 0.0) && (imaginary == 0.0)) || (real + addend.getReal())","((real == 0.0) && (imaginary == 0.0)) && ((-q1) / squareNorm)","((q1a * q2d) + (q1b * q2c))","((real == 0.0) && (imaginary == 0.0)) && (q0 == q.getQ0())","((real == 0.0) && (imaginary == 0.0)) || ((real * factor.imaginary) + (imaginary * factor.real))","q1.getQ3() + q2.getQ3()","parsePosition.getErrorIndex()","((real == 0.0) && (imaginary == 0.0)) && (q1d * q2c)","((real == 0.0) && (imaginary == 0.0)) || (other instanceof org.apache.commons.math3.complex.Quaternion)","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","((real == 0.0) && (imaginary == 0.0)) && ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.FastMath.sin(real2)","java.lang.Double.isInfinite(divisor)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(factor.real)","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","((real == 0.0) && (imaginary == 0.0)) || ((-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","unitQ.getQ2()","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ3() * q2.getQ3())","((real == 0.0) && (imaginary == 0.0)) || (imaginary * factor.imaginary)","6130362688700788798L","((real == 0.0) && (imaginary == 0.0)) && (real + addend.getReal())","((real == 0.0) && (imaginary == 0.0)) || (real * factor.real)","((real == 0.0) && (imaginary == 0.0)) && (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(real)","((real == 0.0) && (imaginary == 0.0)) && (nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart))","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2))","((real == 0.0) && (imaginary == 0.0)) || (real < (-20.0))","((real == 0.0) && (imaginary == 0.0)) || ((31 * result) + c)","((real == 0.0) && (imaginary == 0.0)) || (im < 0.0)","((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2b) + (q1b * q2a))","(real == 0.0)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","((real == 0.0) && (imaginary == 0.0)) && ((((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a))","((q1a * q2c) - (q1b * q2d))","((real == 0.0) && (imaginary == 0.0)) || (((real * q) + imaginary) / denominator)","((real == 0.0) && (imaginary == 0.0)) || ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","((real == 0.0) && (imaginary == 0.0)) && (r * org.apache.commons.math3.util.FastMath.sin(theta))","((real == 0.0) && (imaginary == 0.0)) || (q1b * q2a)","((real == 0.0) && (imaginary == 0.0)) && ((imaginary - (real * q)) / denominator)","java.lang.Double.isNaN(subtrahend)","((real == 0.0) && (imaginary == 0.0)) && (real * q)","((real == 0.0) && (imaginary == 0.0)) && (2 * org.apache.commons.math3.util.FastMath.PI)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","imaginary / divisor","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","((real == 0.0) && (imaginary == 0.0)) || (q1a * q2d)","1 + (q * q)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","k++","((real == 0.0) && (imaginary == 0.0)) || (imaginaryFormat == null)","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","(q1.getQ2() * q2.getQ2())","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(factor)","6195664516687396620L","((real == 0.0) && (imaginary == 0.0)) || (norm < org.apache.commons.math3.util.Precision.SAFE_MIN)","((real == 0.0) && (imaginary == 0.0)) || (omegaImaginaryCounterClockwise[i - 1] * sinT)","true","pos.setBeginIndex(0)","a","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","imaginary / (2.0 * t)","((real == 0.0) && (imaginary == 0.0)) || (q1 * q1)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t))","((real == 0.0) && (imaginary == 0.0)) || (expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(real)","isInfinite","(!isNaN)","((real == 0.0) && (imaginary == 0.0)) || (c / d)","((real == 0.0) && (imaginary == 0.0)) && (r < 0)","((real == 0.0) && (imaginary == 0.0)) && ((c == 0.0) && (d == 0.0))","((real == 0.0) && (imaginary == 0.0)) && (q3 == q.getQ3())","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((real == 0.0) && (imaginary == 0.0)) && ((((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d))","((real == 0.0) && (imaginary == 0.0)) && (other instanceof org.apache.commons.math3.complex.Quaternion)","(q1d * q2c)","((real == 0.0) && (imaginary == 0.0)) && ((real == c.real) && (imaginary == c.imaginary))","((real == 0.0) && (imaginary == 0.0)) && (i < real.length)","getQ0() < 0","imaginary > 20.0","(q1d * q2b)","((real == 0.0) && (imaginary == 0.0)) || (real - subtrahend)","((real == 0.0) && (imaginary == 0.0)) && result.add(createComplex(realPart, imaginaryPart))","((real == 0.0) && (imaginary == 0.0)) && (isNaN || addend.isNaN)","((real == 0.0) && (imaginary == 0.0)) && (q0 / norm)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","q2.getQ2()","((real == 0.0) && (imaginary == 0.0)) && (i - 1)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","((real == 0.0) && (imaginary == 0.0)) || (imaginary == 0.0)","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","((real == 0.0) && (imaginary == 0.0)) && (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary))","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t))","((real == 0.0) && (imaginary == 0.0)) && (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ2() * q2.getQ2())","((real == 0.0) && (imaginary == 0.0)) && (real - subtrahend.getReal())","-1.0","((real == 0.0) && (imaginary == 0.0)) && result.add(org.apache.commons.math3.complex.Complex.NaN)","((real == 0.0) && (imaginary == 0.0)) || (imaginary - (real * q))","subtrahend.isNaN","unitQ.getQ1()","((real == 0.0) && (imaginary == 0.0)) && (q1b * q2d)","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ2() * q2.getQ2())","((real == 0.0) && (imaginary == 0.0)) && (((imaginary * q) + real) / denominator)","((real == 0.0) && (imaginary == 0.0)) || (k < 0)","((real == 0.0) && (imaginary == 0.0)) && (real == c.real)","imaginaryCharacter.length() == 0","((real == 0.0) && (imaginary == 0.0)) && (omegaReal[i - 1] * sinT)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isInfinite(divisor)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","((real == 0.0) && (imaginary == 0.0)) || (37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real)))","((real == 0.0) && (imaginary == 0.0)) && (q1c * q2b)","((real == 0.0) && (imaginary == 0.0)) && (q2 == q.getQ2())","isNaN || java.lang.Double.isNaN(addend)","((real == 0.0) && (imaginary == 0.0)) && (imaginary - (real * q))","((real == 0.0) && (imaginary == 0.0)) || ((-q2) / squareNorm)","q1a","((real == 0.0) && (imaginary == 0.0)) && (q1d * q2b)","obj instanceof java.lang.Number","((real == 0.0) && (imaginary == 0.0)) || (q3 / norm)","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary - subtrahend.getImaginary()","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","3","org.apache.commons.math3.util.FastMath.sinh(real2)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ1() + q2.getQ1())","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","((real == 0.0) && (imaginary == 0.0)) || ((k < 0) || (k >= omegaCount))","((real == 0.0) && (imaginary == 0.0)) && (k < 0)","((real == 0.0) && (imaginary == 0.0)) && (c * q)","((real == 0.0) && (imaginary == 0.0)) && (1.0 / ((real * q) + imaginary))","((real == 0.0) && (imaginary == 0.0)) || (other instanceof org.apache.commons.math3.complex.Complex)","java.lang.Double.NaN","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(real)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(real)","divisor.getReal()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","((real == 0.0) && (imaginary == 0.0)) || (((imaginary * q) - real) / denominator)","isNaN || factor.isNaN","q.getQ0()","((real == 0.0) && (imaginary == 0.0)) && (omegaImaginaryCounterClockwise[i - 1] * cosT)","((real == 0.0) && (imaginary == 0.0)) && (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart))","q2a","sign","((real == 0.0) && (imaginary == 0.0)) || (scale * q)","(q1 == q.getQ1())","((real == 0.0) && (imaginary == 0.0)) || (omegaReal[i - 1] * sinT)","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(im)","((real == 0.0) && (imaginary == 0.0)) || (q1b * q2b)","((real == 0.0) && (imaginary == 0.0)) && (c == 0.0)","theta","q1.getQ3() - q2.getQ3()","n > 0","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","q2b","omegaCount","((real == 0.0) && (imaginary == 0.0)) && (imaginary * factor)","-real","((real == 0.0) && (imaginary == 0.0)) && (org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2))","((real == 0.0) && (imaginary == 0.0)) || (imaginary < (-20.0))","omegaReal[k]","((real == 0.0) && (imaginary == 0.0)) || ((!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)))","-omegaImaginaryCounterClockwise[i]","((real == 0.0) && (imaginary == 0.0)) && (isNaN || java.lang.Double.isNaN(factor))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((real == 0.0) && (imaginary == 0.0)) && ((-q2) / squareNorm)","((real == 0.0) && (imaginary == 0.0)) && (q1.getQ1() - q2.getQ1())","((real == 0.0) && (imaginary == 0.0)) && (((imaginary * q) - real) / denominator)","((real == 0.0) && (imaginary == 0.0)) || ((imaginary * q) + real)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","((real == 0.0) && (imaginary == 0.0)) || (1.0 / ((imaginary * q) + real))","2.0 * imaginary","real > 20.0","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","((real == 0.0) && (imaginary == 0.0)) && (nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart))","-6130362688700788798L","((real == 0.0) && (imaginary == 0.0)) || (k < n)","((real == 0.0) && (imaginary == 0.0)) && (realFormat == null)","im < 0.0","((real == 0.0) && (imaginary == 0.0)) && (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","((real == 0.0) && (imaginary == 0.0)) && (re == null)","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","((real == 0.0) && (imaginary == 0.0)) && (divisor.isInfinite() && (!isInfinite()))","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isNaN(addend)","((real == 0.0) && (imaginary == 0.0)) || result.add(org.apache.commons.math3.complex.Complex.INF)","'+'","(q1c * q2d)","-q2","((real == 0.0) && (imaginary == 0.0)) && (1 + (q * q))","((real == 0.0) && (imaginary == 0.0)) || ((c * q) + d)","re.doubleValue()","((real == 0.0) && (imaginary == 0.0)) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","((real == 0.0) && (imaginary == 0.0)) && (q1a * q2d)","((imaginary * q) + real) / denominator","((real == 0.0) && (imaginary == 0.0)) && ((2 * org.apache.commons.math3.util.FastMath.PI) / n)","((real == 0.0) && (imaginary == 0.0)) && (((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","((real == 0.0) && (imaginary == 0.0)) && (format == null)","c.imaginary","java.lang.Double.isInfinite(real)","((real == 0.0) && (imaginary == 0.0)) && java.lang.Double.isNaN(subtrahend)","d","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","t","real2","q1.getQ3()","((real == 0.0) && (imaginary == 0.0)) || org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","((real == 0.0) && (imaginary == 0.0)) && ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor))","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2a) - (q1b * q2b))","((real == 0.0) && (imaginary == 0.0)) || (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ2() - q2.getQ2())","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","factor.isNaN","denominator","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ1() * q2.getQ1())","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","((real == 0.0) && (imaginary == 0.0)) || (q0 / norm)","((real == 0.0) && (imaginary == 0.0)) || (q1c * q2b)","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((real == 0.0) && (imaginary == 0.0)) && ((real * factor.real) - (imaginary * factor.imaginary))","-unitQ.getQ2()","((real == 0.0) && (imaginary == 0.0)) || (org.apache.commons.math3.util.FastMath.abs(real) + abs())","complex.getReal()","q1.getQ0()","real / imaginary","((real == 0.0) && (imaginary == 0.0)) || java.lang.Double.isInfinite(divisor)","q","((real == 0.0) && (imaginary == 0.0)) || (q1.getQ0() - q2.getQ0())","((real == 0.0) && (imaginary == 0.0)) || (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary))"]
[DEBUG] DetailLog:460 - choose ingredient: ((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2b) + (q1b * q2a))
[DEBUG] DetailLog:479 - add used element: ((real == 0.0) && (imaginary == 0.0)) && ((q1a * q2b) + (q1b * q2a))
[DEBUG] DetailLog:437 - BaseElements for 312-if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}-InsertAfterOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtIfImpl: size: 242 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","return java.lang.Double.NaN","if (isNaN) {	return java.lang.Double.NaN;}","return java.lang.Double.POSITIVE_INFINITY","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","return org.apache.commons.math3.util.FastMath.abs(real)","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","return org.apache.commons.math3.util.FastMath.abs(imaginary)","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","return org.apache.commons.math3.complex.Complex.NaN","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend.getReal(), imaginary + addend.getImaginary())","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend, imaginary)","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.ZERO","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator)","return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator)","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real / divisor, imaginary / divisor)","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(scale * q, -scale)","return createComplex(scale, (-scale) * q)","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","return true","if (this == other) {	return true;}","return isNaN","return (real == c.real) && (imaginary == c.imaginary)","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","return false","return 7","if (isNaN) {	return 7;}","return 37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","return imaginary","return real","return isInfinite","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.INF","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex((real * factor.real) - (imaginary * factor.imaginary), (real * factor.imaginary) + (imaginary * factor.real))","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(real * factor, imaginary * factor)","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(-real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend.getReal(), imaginary - subtrahend.getImaginary())","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend, imaginary)","return this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0)))","return createComplex(org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), (-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(expReal * org.apache.commons.math3.util.FastMath.cos(imaginary), expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.log(abs()), org.apache.commons.math3.util.FastMath.atan2(imaginary, real))","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","return this.log().multiply(x).exp()","return createComplex(org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(0.0, 0.0)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","return createComplex(t, imaginary / (2.0 * t))","return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt()","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(0.0, 1.0)","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","return createComplex(0.0, -1.0)","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sin(real2) / d, org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(1.0, 0.0)","if (real > 20.0) {	return createComplex(1.0, 0.0);}","return createComplex(-1.0, 0.0)","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real2) / d, org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","return org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","return result","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","return new org.apache.commons.math3.complex.Complex(realPart, imaginaryPart)","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return new org.apache.commons.math3.complex.Complex(realPart)","return createComplex(real, imaginary)","return org.apache.commons.math3.complex.ComplexField.getInstance()","return ((("(" + real) + ", ") + imaginary) + ")"","return org.apache.commons.math3.complex.ComplexField.LazyHolder.INSTANCE","return org.apache.commons.math3.complex.Complex.ONE","return org.apache.commons.math3.complex.Complex.class","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","return java.text.NumberFormat.getAvailableLocales()","return format(c, new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","return format(new org.apache.commons.math3.complex.Complex(c, 0), new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","return toAppendTo","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","return ret","return imaginaryCharacter","return imaginaryFormat","return org.apache.commons.math3.complex.ComplexFormat.getInstance(java.util.Locale.getDefault())","return new org.apache.commons.math3.complex.ComplexFormat(f)","return new org.apache.commons.math3.complex.ComplexFormat(imaginaryCharacter, f)","return realFormat","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","return null","if (re == null) {	pos.setIndex(initialIndex);	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), 0.0)","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), im.doubleValue() * sign)","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","return new org.apache.commons.math3.complex.Complex(r * org.apache.commons.math3.util.FastMath.cos(theta), r * org.apache.commons.math3.util.FastMath.sin(theta))","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","return c","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","return new org.apache.commons.math3.complex.Quaternion(q0, -q1, -q2, -q3)","return new org.apache.commons.math3.complex.Quaternion(w, x, y, z)","return org.apache.commons.math3.complex.Quaternion.multiply(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() + q2.getQ0(), q1.getQ1() + q2.getQ1(), q1.getQ2() + q2.getQ2(), q1.getQ3() + q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.add(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() - q2.getQ0(), q1.getQ1() - q2.getQ1(), q1.getQ2() - q2.getQ2(), q1.getQ3() - q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.subtract(this, q)","return (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","return org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / norm, q1 / norm, q2 / norm, q3 / norm)","return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","return ((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","return org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","return org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3())","return this.normalize()","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / squareNorm, (-q1) / squareNorm, (-q2) / squareNorm, (-q3) / squareNorm)","return q0","return q1","return q2","return q3","return getQ0()","return new double[]{ getQ1(), getQ2(), getQ3() }","return new org.apache.commons.math3.complex.Quaternion(alpha * q0, alpha * q1, alpha * q2, alpha * q3)","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","return s.toString()","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","return isCounterClockWise","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","return","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}","return omegaReal[k]","return isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","return omegaCount"]
[DEBUG] DetailLog:460 - choose ingredient: if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {
	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);
}
[DEBUG] DetailLog:479 - add used element: if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {
	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);
}
[DEBUG] DetailLog:437 - BaseElements for 305-org.apache.commons.math3.complex.Complex.NaN-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 305, pointed element: CtFieldReadImpl: size: 101 ["NaN","I","createComplex(org.apache.commons.math3.util.FastMath.log(abs()), org.apache.commons.math3.util.FastMath.atan2(imaginary, real))","this.add(org.apache.commons.math3.complex.Complex.I)","createComplex(org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","createComplex(org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log()","createComplex(real, -imaginary)","org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0))","this.multiply(org.apache.commons.math3.complex.Complex.NaN)","this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","INF","subtrahend","parse(source, parsePosition)","this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.NaN)","createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt()","createComplex(real + addend.getReal(), imaginary + addend.getImaginary())","sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.NaN)","new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0)","this.log().multiply(x).exp()","new org.apache.commons.math3.complex.Complex(realPart)","createComplex(2.0, 0.0)","org.apache.commons.math3.complex.Complex.I.negate()","ONE","createComplex(real + addend, imaginary)","new org.apache.commons.math3.complex.Complex(c, 0)","","this(real, 0.0)","createComplex(scale * q, -scale)","createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator)","this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.NaN)","x","sqrt1z()","org.apache.commons.math3.complex.Complex.I.subtract(org.apache.commons.math3.complex.Complex.NaN)","this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0)))","createComplex(1.0, 0.0)","createComplex(realPart, imaginaryPart)","new org.apache.commons.math3.complex.Complex(re.doubleValue(), im.doubleValue() * sign)","new org.apache.commons.math3.complex.Complex(re.doubleValue(), 0.0)","this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)","new org.apache.commons.math3.complex.Complex(real[i], 0)","factor","createComplex(0.0, 0.0)","this","new org.apache.commons.math3.complex.Complex(r * org.apache.commons.math3.util.FastMath.cos(theta), r * org.apache.commons.math3.util.FastMath.sin(theta))","sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","this.log().multiply(x)","ZERO","((org.apache.commons.math3.complex.Complex.) (org.apache.commons.math3.complex.Complex.NaN))","complex","createComplex(-real, -imaginary)","createComplex(1.0, 0.0).subtract(org.apache.commons.math3.complex.Complex.NaN)","createComplex(real, imaginary)","createComplex(org.apache.commons.math3.util.FastMath.sinh(real2) / d, org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","new org.apache.commons.math3.complex.Complex(0.0, 1.0)","new org.apache.commons.math3.complex.Complex(java.lang.Double.NaN, java.lang.Double.NaN)","sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log()","c[i]","this.add(org.apache.commons.math3.complex.Complex.NaN)","this.log()","org.apache.commons.math3.complex.Complex.INF","createComplex((real * factor.real) - (imaginary * factor.imaginary), (real * factor.imaginary) + (imaginary * factor.real))","createComplex(org.apache.commons.math3.util.FastMath.sin(real2) / d, org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","org.apache.commons.math3.complex.Complex.ONE","this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math3.complex.Complex.NaN)","createComplex(0.0, 1.0)","createComplex(real - subtrahend.getReal(), imaginary - subtrahend.getImaginary())","createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator)","createComplex(real / divisor, imaginary / divisor)","this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.NaN)","this.log().multiply(org.apache.commons.math3.complex.Complex.NaN)","createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","!isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN","createComplex(expReal * org.apache.commons.math3.util.FastMath.cos(imaginary), expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","createComplex(t, imaginary / (2.0 * t))","createComplex(real - subtrahend, imaginary)","this.multiply(this)","new org.apache.commons.math3.complex.Complex(realPart, imaginaryPart)","this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I))","createComplex(org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), (-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","createComplex(-1.0, 0.0)","addend","new org.apache.commons.math3.complex.Complex(0.0, 0.0)","new org.apache.commons.math3.complex.Complex(java.lang.Double.POSITIVE_INFINITY, java.lang.Double.POSITIVE_INFINITY)","sqrt1z().add(org.apache.commons.math3.complex.Complex.NaN)","org.apache.commons.math3.complex.Complex.I.subtract(this)","createComplex(1.0, 0.0).subtract(this.multiply(this))","sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I))","org.apache.commons.math3.complex.Complex.ZERO","createComplex(0.0, -1.0)","this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log()","createComplex(scale, (-scale) * q)","createComplex(real * factor, imaginary * factor)","createComplex(org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","org.apache.commons.math3.complex.Complex.I","this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this))","org.apache.commons.math3.complex.Complex.I.divide(org.apache.commons.math3.complex.Complex.NaN)","this.sqrt1z()","this.multiply(org.apache.commons.math3.complex.Complex.I)","divisor","new org.apache.commons.math3.complex.Complex(1.0, 0.0)"]
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0))
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0))
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.complex.Complex.I
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: 2.0
[DEBUG] DetailLog:549 - new modification added. element: 0.0
[DEBUG] DetailLog:549 - new modification added. element: createComplex(2.0, 0.0)
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0))
[DEBUG] DetailLog:437 - BaseElements for 312-org.apache.commons.math3.util.FastMath.abs(real)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtInvocationImpl: size: 422 ["ONE","I","java.lang.Double.isNaN(real)","java.lang.Double.isInfinite(divisor)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.cosh(real)","im == null","omegaImaginaryCounterClockwise[0]","-q3","(-q2) / squareNorm","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","-q1","q1.getQ2()","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sin(real2)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","isInfinite()","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","getImaginary()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","pos.getIndex()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","org.apache.commons.math3.util.FastMath.log(real)","(c == 0.0) && (d == 0.0)","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","real / divisor","d / c","(imaginary - (real * q))","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","-1","1","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","NaN","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(imaginary == 0.0)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","v[2]","unitQ.getQ3()","(q1b * q2c)","java.lang.Double.isInfinite(factor.real)","v[1]","org.apache.commons.math3.util.FastMath.sqrt(real)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","real == 0.0","(real == 0.0) && (imaginary == 0.0)","(real * q)","2.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","2.0 * real","q.getQ3()","-im","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","-imaginary","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","addend.getReal()","java.lang.Double.isNaN(addend)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","(real == c.real)","(-20.0)","1.0 / n","real + addend.getReal()","i++","1.0 / ((real * q) + imaginary)","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.cos(real2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","INF","ZERO","real + addend","false","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","0","imaginary","org.apache.commons.math3.util.FastMath.abs()","-1.0","unitQ.getQ1()","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","7","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-6195664516687396620L","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.cosh(real2)","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","37","r < 0","isNaN || subtrahend.isNaN","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isNaN(divisor)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","!isInfinite()","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","subtrahend.getReal()","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","org.apache.commons.math3.util.FastMath.cos(real)","-scale","java.lang.Double.isNaN(imaginary)","real","isNaN","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","(!isNaN)","divisor.getReal()","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","org.apache.commons.math3.util.FastMath.exp(real)","(q1 == q.getQ1())","isNaN || factor.isNaN","q.getQ0()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","java.lang.Double.isInfinite(real)","isInfinite","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.cos(imaginary)","alpha * q3","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","(c * q) + d","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.sin(real)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(real * factor.imaginary) + (imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.real)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q2.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","divisor.getImaginary()","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","org.apache.commons.math3.util.MathUtils.hash(real)","imaginary / real","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","((real * q) + imaginary) / denominator","(-q3) / squareNorm","(-org.apache.commons.math3.util.FastMath.sin(real))"]
[DEBUG] DetailLog:460 - choose ingredient: (k >= omegaCount)
[DEBUG] DetailLog:479 - add used element: (k >= omegaCount)
[DEBUG] DetailLog:437 - BaseElements for 314-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtFieldReadImpl: size: 435 ["isNaN","I","NaN","INF","real + addend","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","(-scale)","real[i]","ONE","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","scale","(!isNaN)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","pos.setBeginIndex(real)","(q1 == q.getQ1())","q.getQ0()","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","toAppendTo.setLength(real)","getQ0() < 0","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.sinh(real2)","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","ZERO","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","-unitQ.getQ3()","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","getArgument()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","pos.setIndex(real)","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.FastMath.sinh(real)","pos.setEndIndex(real)","org.apache.commons.math3.util.FastMath.cos(imaginary)","divisor.getImaginary()","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","org.apache.commons.math3.util.FastMath.cosh(real)","(c * q)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(-org.apache.commons.math3.util.FastMath.sin(real))","subtrahend.getReal()","org.apache.commons.math3.util.FastMath.log(real)","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","org.apache.commons.math3.util.FastMath.cos(real)","imaginary","((double.) (real))","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","-1.0","unitQ.getQ1()","this == other","(q1c * q2b)","(31 * result)","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","java.lang.Double.isInfinite(real)","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","scale * q","isNaN || java.lang.Double.isInfinite(imaginary)","q1.getQ1() + q2.getQ1()","divisor.isInfinite()","-6195664516687396620L","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.cosh(real2)","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","37","r < 0","isNaN || subtrahend.isNaN","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isNaN(divisor)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","!isInfinite()","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","-scale","java.lang.Double.isNaN(imaginary)","isInfinite","20092012L","((q0 * q0) + (q1 * q1))","i - 1","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","1.0","(q * q)","v[0]","(imaginary * q)","getNorm()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","getImaginary()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(imaginary2)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","k++","(q1.getQ2() * q2.getQ2())","result.add(org.apache.commons.math3.complex.Complex.INF)","6195664516687396620L","true","pos.setBeginIndex(0)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real >= 0.0","q2 / norm","real < (-20.0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.abs(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","((q1a * q2c) - (q1b * q2d))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","unitQ.getQ2()","org.apache.commons.math3.util.FastMath.exp(real)","getReal()","6130362688700788798L","n <= 0","pos.setErrorIndex(real)","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isInfinite(divisor)","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","isInfinite()","q","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.util.MathUtils.hash(real)","(real * q)","2.0 * real","-im","q.getQ3()","abs()","addend.getReal()","java.lang.Double.isNaN(addend)","getQ2()","(q1a * q2b)","org.apache.commons.math3.util.FastMath.sin(real)","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","(q0 == q.getQ0())","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.sqrt(real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(imaginary == 0.0)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(!isInfinite())"]
[DEBUG] DetailLog:460 - choose ingredient: (imaginary - (real * q)) / denominator
[DEBUG] DetailLog:479 - add used element: (imaginary - (real * q)) / denominator
[DEBUG] DetailLog:437 - BaseElements for 312-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtFieldReadImpl: size: 434 ["I","NaN","INF","ONE","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","getArgument()","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","pos.setBeginIndex(imaginary)","imaginary == 0.0","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","pos.setEndIndex(imaginary)","(q1 * q1)","q0 / squareNorm","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(real * factor.imaginary) + (imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","divisor.getImaginary()","-6195664516687396620L","37","r < 0","divisor.isInfinite()","unitQ.getQ0()","getArgument() / n","realFormat == null","(q1c * q2a)","scale * q","q1.getQ1() + q2.getQ1()","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(2.0 * t)","java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.FastMath.log(abs())","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.abs(getQ0())","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","(d * q)","pos.setIndex(imaginary)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","isNaN || addend.isNaN","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","17","imaginary < (-20.0)","subtrahend.getReal()","-scale","java.lang.Double.isInfinite(imaginary)","ZERO","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","org.apache.commons.math3.util.FastMath.cos(real)","other instanceof org.apache.commons.math3.complex.Complex","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","java.lang.Double.isInfinite(real)","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","real","org.apache.commons.math3.util.FastMath.cos(imaginary)","(imaginary * q)","v[0]","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","0.0","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sinh(real)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","org.apache.commons.math3.util.FastMath.log(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","1","(c == 0.0) && (d == 0.0)","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","real / divisor","d / c","(imaginary - (real * q))","-1","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","org.apache.commons.math3.util.FastMath.sin(real)","(omegaImaginaryCounterClockwise[i - 1] * sinT)","pos.getIndex()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","getQ0()","org.apache.commons.math3.util.FastMath.abs(imaginary)","isNaN","java.lang.Double.isNaN(imaginary)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","(-20.0)","1.0 / n","real + addend.getReal()","1.0 / ((real * q) + imaginary)","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.abs(real)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","omegaCount - 1","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","pos.setErrorIndex(imaginary)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","addend.getReal()","isInfinite","(q1c * q2b)","(31 * result)","imaginaryCharacter.length() == 0","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.abs(d)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.sinh(real2)","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","pos.setEndIndex(0)","toAppendTo.setLength(imaginary)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","-1.0","(!isNaN)","getQ0() < 0","imaginary > 20.0","(q1d * q2b)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","org.apache.commons.math3.util.FastMath.exp(imaginary)","((imaginary * q) + real) / denominator","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","q2.getQ2()","(q1d * q2c)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","((double.) (imaginary))","org.apache.commons.math3.util.MathUtils.hash(imaginary)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","imaginary / divisor","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","java.lang.Double.isNaN(real)"]
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.abs(c)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.abs(c)
[DEBUG] DetailLog:437 - BaseElements for 312-org.apache.commons.math3.util.FastMath.abs(imaginary)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtInvocationImpl: size: 423 ["I","NaN","INF","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","getQ1()","1","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","getNorm()","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","im == null","omegaImaginaryCounterClockwise[0]","-q3","(-q2) / squareNorm","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","-q1","q1.getQ2()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","java.lang.Double.isInfinite(divisor)","ONE","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","real / imaginary","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.cosh(imaginary)","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","(-20.0)","java.lang.Double.isNaN(addend)","(!isNaN)","divisor.getReal()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.exp(imaginary)","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","(k < 0)","real > 20.0","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","java.lang.Double.isInfinite(real)","ZERO","imaginary","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","getArgument()","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","addend.getImaginary()","real","-6195664516687396620L","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.cosh(real2)","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","37","r < 0","isNaN || subtrahend.isNaN","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","this == other","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.log(imaginary)","isNaN","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","isInfinite","org.apache.commons.math3.util.FastMath.abs()","divisor.isInfinite() && (!isInfinite())","(real * q)","2.0 * real","-im","q.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","real == 0.0","2.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","real + addend","false","org.apache.commons.math3.util.FastMath.exp(real)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.cos(imaginary)","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","-imaginary"]
[DEBUG] DetailLog:460 - choose ingredient: q1.getQ3() - q2.getQ3()
[DEBUG] DetailLog:479 - add used element: q1.getQ3() - q2.getQ3()
[DEBUG] DetailLog:437 - BaseElements for 317-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtFieldReadImpl: size: 434 ["NaN","ONE","I","((double.) (real))","(!isInfinite())","(q2 == q.getQ2())","((imaginary * q) - real) / denominator","((q1a * q2a) - (q1b * q2b))","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","-imaginary","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","(imaginary * factor.real)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","(real == c.real) && (imaginary == c.imaginary)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","abs()","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real * q)","2.0 * real","q.getQ3()","pos.setEndIndex(real)","-im","pos.setBeginIndex(real)","2.0","org.apache.commons.math3.util.FastMath.log(real)","(k < 0) || (k >= omegaCount)","pos.setIndex(real)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","addend.getReal()","java.lang.Double.isNaN(addend)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","org.apache.commons.math3.util.FastMath.cos(real2)","real + addend.getReal()","i++","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","real * factor","q1.getQ0() + q2.getQ0()","org.apache.commons.math3.util.MathUtils.hash(real)","(-20.0)","1.0 / n","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","pos.setErrorIndex(real)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","isInfinite()","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","((q0 * q0) + (q1 * q1))","i - 1","toAppendTo.setLength(real)","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","getImaginary()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(imaginary2)","org.apache.commons.math3.util.FastMath.sin(real)","getQ1()","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","1","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","org.apache.commons.math3.util.FastMath.exp(real)","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","java.lang.Double.isNaN(real)","java.lang.Double.isInfinite(real)","real >= 0.0","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real < (-20.0)","isNaN || java.lang.Double.isInfinite(real)","6195664516687396620L","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(factor)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","1 + (q * q)","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","imaginary / divisor","java.lang.Double.isInfinite(factor)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","INF","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","divisor.getImaginary()","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","(-org.apache.commons.math3.util.FastMath.sin(real))","ZERO","(imaginary * factor.imaginary)","subtrahend.getReal()","20.0","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","-scale","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","!isInfinite()","imaginary","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q2.getQ3()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","isNaN","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.sinh(real)","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","7","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(-scale) * q","imaginaryCharacter == null","(q1b * q2d)","-1.0","divisor.isInfinite()","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","unitQ.getQ0()","getArgument() / n","realFormat == null","(q1c * q2a)","scale * q","q1.getQ1() + q2.getQ1()","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(2.0 * t)","org.apache.commons.math3.util.FastMath.sqrt(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","(!isNaN)","org.apache.commons.math3.util.FastMath.abs(real)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","org.apache.commons.math3.util.FastMath.cos(real)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","q1.getQ3() - q2.getQ3()","n > 0","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(q1 == q.getQ1())","isNaN || factor.isNaN","q.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","q1.getQ3()","r * org.apache.commons.math3.util.FastMath.sin(theta)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","real / imaginary","-real","-6195664516687396620L","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","isInfinite","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","isNaN || addend.isNaN","q.getQ2()","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","q"]
[DEBUG] DetailLog:460 - choose ingredient: (!isNaN)
[DEBUG] DetailLog:479 - add used element: (!isNaN)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: isNaN
[DEBUG] DetailLog:549 - new modification added. element: (!isNaN)
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:437 - BaseElements for 312-if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtIfImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: if (real > 20.0) {
	return createComplex(1.0, 0.0);
}
[DEBUG] DetailLog:479 - add used element: if (real > 20.0) {
	return createComplex(1.0, 0.0);
}
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: real
[DEBUG] DetailLog:549 - new modification added. element: 20.0
[DEBUG] DetailLog:549 - new modification added. element: real > 20.0
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: 1.0
[DEBUG] DetailLog:549 - new modification added. element: 0.0
[DEBUG] DetailLog:549 - new modification added. element: createComplex(1.0, 0.0)
[DEBUG] DetailLog:437 - BaseElements for 313-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtFieldReadImpl: size: 434 ["imaginary","I","NaN","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","other instanceof org.apache.commons.math3.complex.Complex","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","real / imaginary","toAppendTo.setLength(real)","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","pos.setEndIndex(real)","q1.getQ0() + q2.getQ0()","divisor.getReal()","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","org.apache.commons.math3.util.FastMath.cosh(real)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","imaginary > 20.0","getQ0() < 0","(q1d * q2b)","q2.getQ2()","(q1d * q2c)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.sin(real)","re.doubleValue()","'+'","(q1c * q2d)","-q2","((imaginary * q) + real) / denominator","addend.getReal()","(-20.0)","1.0 / n","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","abs()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.exp(real)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","INF","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","java.lang.Double.isNaN(imaginary)","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","java.lang.Double.isNaN(divisor)","divisor.isInfinite()","ONE","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sqrt(real)","((real * q) + imaginary) / denominator","(-q3) / squareNorm","real - subtrahend","(c * q)","(q1b * q2a)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary / real","!isInfinite()","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","subtrahend.getReal()","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","pos.setErrorIndex(real)","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","addend.getImaginary()","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isNaN(real)","imaginary < (-20.0)","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","parsePosition.getIndex()","obj instanceof org.apache.commons.math3.complex.Complex","imaginary + addend.getImaginary()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(omegaReal[i - 1] * sinT)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-q2)","getQ3()","r * org.apache.commons.math3.util.FastMath.cos(theta)","java.lang.Double.isInfinite(factor.imaginary)","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","pos.setIndex(real)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","getArgument()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q2.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary)","divisor.getImaginary()","-6195664516687396620L","ZERO","isNaN","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(imaginary == 0.0)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","java.lang.Double.isInfinite(factor.real)","v[1]","isInfinite","org.apache.commons.math3.util.FastMath.sin(imaginary2)","20092012L","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","i - 1","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.sin(real2) / d","1.0","(q * q)","v[0]","(imaginary * q)","getNorm()","getImaginary()","omegaImaginaryCounterClockwise[i]","(omegaImaginaryCounterClockwise[i - 1] * sinT)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","0.0","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","org.apache.commons.math3.util.FastMath.log(real)","real >= 0.0","q2 / norm","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real < (-20.0)","isNaN || java.lang.Double.isInfinite(real)","6195664516687396620L","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","result.add(org.apache.commons.math3.complex.Complex.INF)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sinh(real)","(q1.getQ2() * q2.getQ2())","k++","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","subtrahend.getImaginary()","org.apache.commons.math3.util.FastMath.cos(real)","((double.) (real))","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","org.apache.commons.math3.util.MathUtils.hash(real)","real[i]","org.apache.commons.math3.util.FastMath.abs(real)","pos.setBeginIndex(real)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","isInfinite()","q","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real * q)","2.0 * real","-im","q.getQ3()","2.0","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","-imaginary","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))"]
[DEBUG] DetailLog:460 - choose ingredient: java.lang.Double.isInfinite(factor.imaginary)
[DEBUG] DetailLog:479 - add used element: java.lang.Double.isInfinite(factor.imaginary)
[DEBUG] DetailLog:549 - new modification added. element: NaN
[DEBUG] DetailLog:549 - new modification added. element: NaN.imaginary
[DEBUG] DetailLog:549 - new modification added. element: java.lang.Double.isInfinite(NaN.imaginary)
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:437 - BaseElements for 313-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtFieldReadImpl: size: 435 ["INF","I","NaN","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","java.lang.Double.isInfinite(factor.imaginary)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","divisor.getImaginary()","org.apache.commons.math3.util.MathUtils.hash(real)","(-org.apache.commons.math3.util.FastMath.sin(real))","imaginary / real","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","subtrahend.getReal()","20.0","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.imaginary) + (imaginary * factor.real)","pos.setBeginIndex(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","(q1b * q2b)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.cosh(real)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","ONE","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(real)","(omegaImaginaryCounterClockwise[i - 1] * sinT)","pos.getIndex()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","(c == 0.0) && (d == 0.0)","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","real / divisor","d / c","(imaginary - (real * q))","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","-1","java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","pos.setErrorIndex(imaginary)","java.lang.Double.isNaN(imaginaryPart)","java.lang.Double.isInfinite(divisor)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","parsePosition.getIndex() == 0","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","ZERO","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","(!isNaN)","java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","pos.setIndex(imaginary)","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","((imaginary * q) + real) / denominator","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","divisor.getReal()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.exp(imaginary)","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","-6130362688700788798L","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","-unitQ.getQ2()","real","isNaN","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.log(imaginary)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","pos.setEndIndex(imaginary)","(q1b * q2c)","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.cos(imaginary2)","-unitQ.getQ0()","omegaReal[0]","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","v[2]","isInfinite()","omegaReal[i - 1]","1","2","i < real.length","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","isInfinite","-6195664516687396620L","divisor.isInfinite()","java.lang.Double.isNaN(divisor)","scale * q","(2.0 * t)","getArgument() / n","unitQ.getQ0()","realFormat == null","(q1c * q2a)","isNaN || java.lang.Double.isInfinite(imaginary)","q1.getQ1() + q2.getQ1()","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.FastMath.log(abs())","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.abs(getQ0())","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","37","r < 0","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.cosh(real2)","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.sin(imaginary)","!isInfinite()","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","result.add(org.apache.commons.math3.complex.Complex.NaN)","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","-scale","q","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","toAppendTo.setLength(imaginary)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","q1.getQ3()","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","org.apache.commons.math3.util.FastMath.cos(real)","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","addend.getReal()","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.abs(real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","org.apache.commons.math3.util.MathUtils.hash(imaginary)","java.lang.Double.isInfinite(factor.real)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(!isInfinite())","((double.) (imaginary))"]
[DEBUG] DetailLog:460 - choose ingredient: -unitQ.getQ3()
[DEBUG] DetailLog:479 - add used element: -unitQ.getQ3()
[DEBUG] DetailLog:437 - BaseElements for 314-((real * q) + imaginary)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl: size: 428 ["I","NaN","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","!isInfinite()","(imaginary * factor.imaginary)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","subtrahend.getReal()","20.0","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","org.apache.commons.math3.util.MathUtils.hash(real)","INF","ONE","java.lang.Double.isInfinite(real)","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","ZERO","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","org.apache.commons.math3.util.FastMath.sinh(imaginary)","divisor.isInfinite()","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.abs(d)","(!isNaN)","getQ0() < 0","imaginary > 20.0","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","-6195664516687396620L","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","37","r < 0","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","imaginary","org.apache.commons.math3.util.FastMath.abs(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isNaN(real)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real >= 0.0","q2 / norm","real < (-20.0)","result.add(org.apache.commons.math3.complex.Complex.INF)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(c == 0.0) && (d == 0.0)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","real / divisor","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","scale","(real * (q + imaginary))","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","java.lang.Double.isInfinite(divisor)","omegaImaginaryCounterClockwise[0]","((q1a * q2b) + (q1b * q2a))","im == null","-q1","-q3","(-q2) / squareNorm","q1.getQ2()","getReal()","n <= 0","real","org.apache.commons.math3.util.FastMath.abs(real)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","addend.getReal()","java.lang.Double.isNaN(addend)","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","1","d / c","k < n","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","((imaginary * q) - real) / denominator","isNaN","isInfinite","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","-scale","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","q"]
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.MathUtils.hash(real)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.MathUtils.hash(real)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: real
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.util.MathUtils.hash(real)
[DEBUG] DetailLog:437 - BaseElements for 313-real / imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtBinaryOperatorImpl: size: 426 ["java.lang.Double.isNaN(addend)","NaN","I","INF","v[1]","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","((imaginary * q) - real)","(imaginary == 0.0)","im.doubleValue() * sign","real + addend","1.0 / ((imaginary * q) + real)","v[2]","(real * factor.imaginary)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","unitQ.getQ3()","(q1b * q2c)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","false","(d == 0.0)","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","31","((imaginary * q) - real) / denominator","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","real >= 0.0","q2 / norm","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","isInfinite()","ONE","ZERO","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","divisor.getReal()","i < absN","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","-6130362688700788798L","im < 0.0","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","q1.getQ3() - q2.getQ3()","n > 0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","(!isNaN)","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","((imaginary * q) + real) / denominator","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","imaginary","-6195664516687396620L","37","r < 0","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","q","result.add(createComplex(realPart, imaginaryPart))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","divisor.getImaginary()","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","addend.getImaginary()","real","isNaN","(q1c * q2b)","(31 * result)","imaginaryCharacter.length() == 0","unitQ.getQ1()","this == other","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","isInfinite","(real * q)","2.0 * real","-im","q.getQ3()","abs()","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.abs(real)","-imaginary","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(imaginary * factor.real)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)"]
[DEBUG] DetailLog:460 - choose ingredient: ((real * q) + imaginary) / denominator
[DEBUG] DetailLog:479 - add used element: ((real * q) + imaginary) / denominator
[DEBUG] DetailLog:437 - BaseElements for 313-double q = real / imaginary-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtLocalVariableImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: omegaImaginaryClockwise = null
[DEBUG] DetailLog:479 - add used element: omegaImaginaryClockwise = null
[DEBUG] DetailLog:460 - choose ingredient: this.q1 = b
[DEBUG] DetailLog:479 - add used element: this.q1 = b
[DEBUG] DetailLog:437 - BaseElements for 314-q-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtVariableReadImpl: size: 444 ["real","INF","I","(-q1)","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","org.apache.commons.math3.util.FastMath.abs(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","pos.setIndex(q)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","(q1.getQ2() * q2.getQ2())","6195664516687396620L","pos.setBeginIndex(0)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.FastMath.exp(q)","k++","java.lang.Double.isInfinite(divisor)","NaN","ONE","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","ZERO","q2.getQ3()","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","java.lang.Double.isNaN(q)","(real * factor.real) - (imaginary * factor.imaginary)","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","format == null","q0 / norm","java.lang.Double.isInfinite(q)","imaginary","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","q0 / squareNorm","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","imaginary == 0.0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","getArgument()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","addend.getImaginary()","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","divisor.getImaginary()","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","result.add(createComplex(realPart, imaginaryPart))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(-q3)","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","org.apache.commons.math3.util.MathUtils.hash(q)","org.apache.commons.math3.util.MathUtils.hash(real)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","isNaN","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isNaN(addend)","(real == c.real)","v.length != 3","(q3 * q3)","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","divisor.isInfinite()","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.abs(q)","getQ0() < 0","imaginary > 20.0","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","org.apache.commons.math3.util.FastMath.cosh(q)","org.apache.commons.math3.util.FastMath.log(q)","pos.setEndIndex(q)","(q1 == q.getQ1())","-real","java.lang.Double.isInfinite(real)","-6195664516687396620L","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","37","r < 0","isNaN || subtrahend.isNaN","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","isInfinite","1","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","(imaginary - (real * q))","-1","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","(c == 0.0) && (d == 0.0)","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","d / c","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","0.0","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","isInfinite()","org.apache.commons.math3.util.FastMath.abs(real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.cos(q)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(imaginary == 0.0)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.exp(real)","java.lang.Double.isInfinite(factor.real)","-imaginary","org.apache.commons.math3.util.FastMath.sin(q)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","pos.setErrorIndex(q)","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","q1.getQ0() - q2.getQ0()","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","toAppendTo.setLength(q)","org.apache.commons.math3.util.FastMath.abs(c)","(real == 0.0) && (imaginary == 0.0)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(!isInfinite())","org.apache.commons.math3.util.FastMath.sqrt(q)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","((double.) (q))","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.sinh(q)","true","imaginary / (2.0 * t)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","((q0 * q0) + (q1 * q1))","i - 1","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","pos.setBeginIndex(q)","java.lang.Double.isNaN(imaginaryPart)","scale"]
[DEBUG] DetailLog:460 - choose ingredient: q.getQ3()
[DEBUG] DetailLog:479 - add used element: q.getQ3()
[DEBUG] DetailLog:437 - BaseElements for 318-(imaginary * q)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl: size: 427 ["addend.getReal()","ONE","I","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.sin(real2)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","NaN","q","(q2 == q.getQ2())","(!isInfinite())","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(real == c.real) && (imaginary == c.imaginary)","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","1","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.sinh(real)","omegaImaginaryCounterClockwise[i]","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","INF","ZERO","q2 / norm","real >= 0.0","real < (-20.0)","result.add(org.apache.commons.math3.complex.Complex.INF)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","getNorm()","v[0]","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isInfinite(divisor)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","n <= 0","((q1a * q2b) + (q1b * q2a))","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","imaginary","37","r < 0","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cosh(real2)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","subtrahend.getReal()","-scale","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","divisor.getImaginary()","scale","(!isNaN)","getQ0() < 0","((imaginary * q) + real) / denominator","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","unitQ.getQ1()","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","imaginary - subtrahend.getImaginary()","3","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","obj instanceof java.lang.Number","isNaN || java.lang.Double.isNaN(addend)","java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(divisor)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","(31 * result)","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","7","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-6195664516687396620L","real","isNaN","org.apache.commons.math3.util.FastMath.abs(real)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","-imaginary","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","(imaginary * factor.real)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","java.lang.Double.isNaN(addend)","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","isInfinite","subtrahend.getImaginary()"]
[DEBUG] DetailLog:460 - choose ingredient: (c * q) + d
[DEBUG] DetailLog:479 - add used element: (c * q) + d
[DEBUG] DetailLog:437 - BaseElements for 314-double scale = 1.0 / ((real * q) + imaginary)-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtLocalVariableImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {
	return org.apache.commons.math3.complex.Complex.NaN;
}
[DEBUG] DetailLog:479 - add used element: if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {
	return org.apache.commons.math3.complex.Complex.NaN;
}
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.atan2(imaginary, real)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.atan2(imaginary, real)
[DEBUG] DetailLog:437 - BaseElements for 317-imaginary / real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtBinaryOperatorImpl: size: 426 ["isInfinite","NaN","I","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.cos(imaginary)","alpha * q3","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","(c * q) + d","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(-org.apache.commons.math3.util.FastMath.sin(real))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","(c * q)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","isNaN || subtrahend.isNaN","r < 0","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","addend.getImaginary()","INF","(c == 0.0) && (d == 0.0)","real / divisor","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","1","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","(imaginary - (real * q))","-1","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","org.apache.commons.math3.util.FastMath.sin(real)","pos.getIndex()","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","isInfinite()","(-scale)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","ONE","ZERO","imaginary","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","1 + (q * q)","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","imaginary / divisor","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","real","java.lang.Double.isNaN(real)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sinh(real)","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","isNaN","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","real + addend","false","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.abs(real)","-imaginary","org.apache.commons.math3.util.FastMath.abs(c)","(real == 0.0) && (imaginary == 0.0)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","addend.getReal()","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","this == other","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","(!isNaN)","java.lang.Double.isInfinite(real)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","java.lang.Double.isNaN(addend)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","v.length != 3","n == 0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","q1.getQ3()","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","real / imaginary","-6195664516687396620L","37","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)"]
[DEBUG] DetailLog:460 - choose ingredient: -q3
[DEBUG] DetailLog:479 - add used element: -q3
[DEBUG] DetailLog:437 - BaseElements for 304-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtFieldReadImpl: size: 433 ["((double.) (real))","INF","I","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","-unitQ.getQ3()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","c / d","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","NaN","ONE","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cosh(real2)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","-scale","-6195664516687396620L","java.lang.Double.isNaN(imaginary)","scale * q","java.lang.Double.isNaN(divisor)","ZERO","org.apache.commons.math3.util.FastMath.sqrt(real)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","result.add(createComplex(realPart, imaginaryPart))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","subtrahend.getReal()","20.0","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","q0 / squareNorm","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.real)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","imaginary == 0.0","org.apache.commons.math3.util.FastMath.cosh(real)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","org.apache.commons.math3.util.FastMath.cos(real)","imaginary","isNaN","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","q1.getQ0() - q2.getQ0()","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","abs()","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real * q)","2.0 * real","-im","q.getQ3()","2.0","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","i++","toAppendTo.setLength(real)","(q1a * q2b)","getQ2()","(q0 == q.getQ0())","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","isInfinite","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","7","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","pos.setErrorIndex(real)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","pos.setIndex(real)","3","imaginary - subtrahend.getImaginary()","-1.0","unitQ.getQ1()","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.abs(real)","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","q2.getQ2()","((imaginary * q) + real) / denominator","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","re.doubleValue()","'+'","(q1c * q2d)","-q2","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","java.lang.Double.isNaN(addend)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","(real == c.real)","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","divisor.getReal()","java.lang.Double.isInfinite(real)","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.MathUtils.hash(real)","(real == 0.0)","pos.setBeginIndex(real)","((q1a * q2c) - (q1b * q2d))","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","20092012L","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","i - 1","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.sin(real2) / d","1.0","(q * q)","(imaginary * q)","v[0]","getNorm()","pos.setEndIndex(real)","getImaginary()","omegaImaginaryCounterClockwise[i]","(omegaImaginaryCounterClockwise[i - 1] * sinT)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","0.0","java.lang.Double.isInfinite(factor)","k++","(q1.getQ2() * q2.getQ2())","result.add(org.apache.commons.math3.complex.Complex.INF)","6195664516687396620L","true","pos.setBeginIndex(0)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real >= 0.0","q2 / norm","real < (-20.0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(imaginaryPart)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","org.apache.commons.math3.util.FastMath.sin(real)","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","1","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(c == 0.0) && (d == 0.0)","real / divisor","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","real + addend","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","false","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(!isInfinite())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.log(real)","(q2 == q.getQ2())"]
[DEBUG] DetailLog:460 - choose ingredient: omegaReal[k]
[DEBUG] DetailLog:479 - add used element: omegaReal[k]
[DEBUG] DetailLog:437 - BaseElements for 314-(real * q)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl: size: 427 ["ONE","I","NaN","divisor.isInfinite()","(2.0 * t)","getArgument() / n","unitQ.getQ0()","realFormat == null","(q1c * q2a)","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","this == other","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","(!isNaN)","java.lang.Double.isInfinite(real)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","java.lang.Double.isNaN(addend)","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","v.length != 3","n == 0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","q1.getQ3()","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","real / imaginary","INF","imaginary * factor","(omegaReal[i - 1] * sinT)","(-q2)","getQ3()","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","java.lang.Double.isInfinite(factor.imaginary)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","q","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","-scale","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(-q3)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","ZERO","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","imaginary","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(real * factor.imaginary) + (imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.cosh(real)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","real","isNaN","scale","org.apache.commons.math3.util.FastMath.abs(real)","2.0 * real","-im","q.getQ3()","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","abs()","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","1","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.sinh(real)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","-imaginary","org.apache.commons.math3.util.FastMath.abs(c)","(real == 0.0) && (imaginary == 0.0)","real == 0.0","-unitQ.getQ1()","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","isInfinite","-6195664516687396620L","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","java.lang.Double.isNaN(imaginary)","scale * q","q1.getQ1() + q2.getQ1()","java.lang.Double.isNaN(divisor)"]
[DEBUG] DetailLog:460 - choose ingredient: im == null
[DEBUG] DetailLog:479 - add used element: im == null
[DEBUG] DetailLog:437 - BaseElements for 304-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtFieldReadImpl: size: 434 ["real","I","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","isNaN || java.lang.Double.isNaN(addend)","3","toAppendTo.setLength(imaginary)","imaginary - subtrahend.getImaginary()","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","-6195664516687396620L","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","org.apache.commons.math3.util.FastMath.abs(d)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","-1.0","unitQ.getQ1()","divisor.isInfinite()","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","unitQ.getQ0()","getArgument() / n","realFormat == null","(q1c * q2a)","(2.0 * t)","isNaN || java.lang.Double.isInfinite(imaginary)","q1.getQ1() + q2.getQ1()","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(-scale) * q","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","7","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","imaginaryCharacter == null","(q1b * q2d)","java.lang.Double.isNaN(divisor)","scale * q","org.apache.commons.math3.util.FastMath.abs(imaginary)","isNaN || addend.isNaN","q.getQ2()","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","NaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.log(abs())","(d * q)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","-scale","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(-q3)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","result.add(createComplex(realPart, imaginaryPart))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary / real","(c * q)","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.cos(theta)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","!isInfinite()","INF","ONE","i < absN","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","q1.getQ3() - q2.getQ3()","n > 0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","divisor.getReal()","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","((imaginary * q) + real) / denominator","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","ZERO","java.lang.Double.isNaN(imaginary)","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","org.apache.commons.math3.util.FastMath.cosh(real)","(real * factor.real) - (imaginary * factor.imaginary)","im.doubleValue()","pos.setErrorIndex(imaginary)","q2.getQ3()","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","q0 / squareNorm","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(real * factor.imaginary) + (imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.real)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","imaginary == 0.0","org.apache.commons.math3.util.FastMath.log(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(omegaReal[i - 1] * sinT)","(-q2)","getQ3()","java.lang.Double.isInfinite(factor.imaginary)","isNaN","org.apache.commons.math3.util.FastMath.cos(imaginary)","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","im == null","omegaImaginaryCounterClockwise[0]","-q3","(-q2) / squareNorm","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","(d * q) + c","subtrahend.getImaginary()","((q1a * q2d) + (q1b * q2c))","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","pos.setBeginIndex(imaginary)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","java.lang.Double.isInfinite(divisor)","isInfinite","((double.) (imaginary))","org.apache.commons.math3.util.FastMath.abs(real)","addend.getReal()","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","pos.setIndex(imaginary)","(q1a * q2a)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.exp(imaginary)","(q2 == q.getQ2())","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(!isInfinite())","isInfinite()","org.apache.commons.math3.util.MathUtils.hash(imaginary)","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","1.0","(q * q)","pos.setEndIndex(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","unitQ.getQ3()","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","java.lang.Double.isInfinite(real)"]
[DEBUG] DetailLog:460 - choose ingredient: realFormat == null
[DEBUG] DetailLog:479 - add used element: realFormat == null
[DEBUG] DetailLog:460 - choose ingredient: (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))
[DEBUG] DetailLog:479 - add used element: (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))
[DEBUG] DetailLog:549 - new modification added. element: 17
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: imaginary
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.util.MathUtils.hash(imaginary)
[DEBUG] DetailLog:549 - new modification added. element: (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))
[DEBUG] DetailLog:460 - choose ingredient: n <= 0
[DEBUG] DetailLog:479 - add used element: n <= 0
[DEBUG] DetailLog:437 - BaseElements for 318-((imaginary * q) + real)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl: size: 428 ["java.lang.Double.isNaN(addend)","java.lang.Double.isNaN(imaginary)","real","ONE","I","1","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","i < real.length","2","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","0.0","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","NaN","INF","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","getNorm()","(q * q)","v[0]","(imaginary * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","scale","((q0 * q0) + (q1 * q1))","i - 1","1.0","ZERO","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","!isInfinite()","(imaginary * factor.imaginary)","subtrahend.getReal()","20.0","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","parsePosition.getIndex()","obj instanceof org.apache.commons.math3.complex.Complex","imaginary + addend.getImaginary()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(omegaReal[i - 1] * sinT)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-q2)","getQ3()","r * org.apache.commons.math3.util.FastMath.cos(theta)","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","q0 / squareNorm","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary == 0.0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","getArgument()","org.apache.commons.math3.util.FastMath.cos(imaginary)","divisor.getImaginary()","q","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real)","q2.getQ3()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","(real * factor.real) - (imaginary * factor.imaginary)","(imaginary * (q + real))","imaginary","-6195664516687396620L","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.cosh(real2)","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","37","r < 0","isNaN || subtrahend.isNaN","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","java.lang.Double.isNaN(divisor)","java.lang.Double.isInfinite(imaginary)","addend.getImaginary()","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(!isNaN)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","divisor.isInfinite()","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.abs(d)","java.lang.Double.isInfinite(real)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(-20.0)","org.apache.commons.math3.util.FastMath.cos(innerPart)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","isNaN","abs()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","(real * q)","2.0 * real","-im","q.getQ3()","addend.getReal()","(q1d * q2d)","divisor.isInfinite() && (!isInfinite())","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","org.apache.commons.math3.util.FastMath.abs(real)","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(imaginary == 0.0)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","v[2]","-imaginary","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(real == c.real) && (imaginary == c.imaginary)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","((imaginary * q) - real) / denominator","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(!isInfinite())","isInfinite","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","(-scale)","real[i]","isInfinite()"]
[DEBUG] DetailLog:460 - choose ingredient: (imaginary == 0.0)
[DEBUG] DetailLog:479 - add used element: (imaginary == 0.0)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: imaginary
[DEBUG] DetailLog:549 - new modification added. element: 0.0
[DEBUG] DetailLog:549 - new modification added. element: (imaginary == 0.0)
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:460 - choose ingredient: (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)
[DEBUG] DetailLog:479 - add used element: (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)
[DEBUG] DetailLog:460 - choose ingredient: this.imaginaryFormat = format
[DEBUG] DetailLog:479 - add used element: this.imaginaryFormat = format
[DEBUG] DetailLog:437 - BaseElements for 304-(imaginary == 0.0)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl: size: 425 ["I","INF","NaN","-6195664516687396620L","((real * q) + imaginary)","(q1d * q2a)","37","r < 0","isNaN || subtrahend.isNaN","java.lang.Double.isNaN(divisor)","java.lang.Double.isNaN(imaginary)","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","7","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","ONE","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.abs(real)","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","2.0","org.apache.commons.math3.util.FastMath.abs(c)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","-imaginary","(!isInfinite())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","ZERO","(!isNaN)","getQ0() < 0","((imaginary * q) + real) / denominator","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","-real","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","q1.getQ2() + q2.getQ2()","(k < 0)","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","2.0 * imaginary","-6130362688700788798L","real > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real2)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","imaginary - subtrahend.getImaginary()","3","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","obj instanceof java.lang.Number","isNaN || java.lang.Double.isNaN(addend)","imaginary","real","isInfinite()","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","isNaN","addend.getReal()","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","java.lang.Double.isNaN(addend)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","v.length != 3","n == 0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","q1.getQ3()","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","(-20.0)","1.0 / n","real + addend.getReal()","i++","1.0 / ((real * q) + imaginary)","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.cos(real2)","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","divisor.getReal()","i < absN","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","q1.getQ3() - q2.getQ3()","n > 0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","isInfinite","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","org.apache.commons.math3.util.FastMath.cos(imaginary)","alpha * q3","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","(c * q) + d","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","((java.lang.Number) (obj)).doubleValue()","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","imaginary < (-20.0)","imaginary / real","(c * q)","(q1b * q2a)","result.add(createComplex(realPart, imaginaryPart))","org.apache.commons.math3.util.MathUtils.hash(real)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","!isInfinite()","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","addend.getImaginary()"]
[DEBUG] DetailLog:460 - choose ingredient: k < n
[DEBUG] DetailLog:479 - add used element: k < n
[DEBUG] DetailLog:437 - BaseElements for 318-real-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtFieldReadImpl: size: 435 ["isNaN","(!isNaN)","NaN","I","scale","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","parsePosition.getIndex()","obj instanceof org.apache.commons.math3.complex.Complex","imaginary + addend.getImaginary()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(omegaReal[i - 1] * sinT)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-q2)","getQ3()","r * org.apache.commons.math3.util.FastMath.cos(theta)","java.lang.Double.isInfinite(factor.imaginary)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","getArgument()","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.FastMath.cos(imaginary)","divisor.getImaginary()","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","subtrahend.getReal()","(-org.apache.commons.math3.util.FastMath.sin(real))","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","pos.setEndIndex(real)","addend.getImaginary()","org.apache.commons.math3.util.FastMath.log(abs())","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","pos.setIndex(real)","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.cos(real)","37","r < 0","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.cosh(real2)","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.sin(real)","java.lang.Double.isInfinite(imaginary)","-6195664516687396620L","java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(divisor)","INF","org.apache.commons.math3.util.FastMath.sqrt(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","getImaginary()","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.cosh(real)","v[0]","(imaginary * q)","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","0.0","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","isInfinite()","omegaReal[i - 1]","real[i]","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","1","(c == 0.0) && (d == 0.0)","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","real / divisor","d / c","(imaginary - (real * q))","-1","20120201L","isNaN || java.lang.Double.isNaN(subtrahend)","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(q2 == q.getQ2())","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","((imaginary * q) - real)","(imaginary == 0.0)","im.doubleValue() * sign","real + addend","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","1.0 / ((imaginary * q) + real)","v[2]","(real * factor.imaginary)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","unitQ.getQ3()","(q1b * q2c)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","false","(d == 0.0)","(-scale)","ONE","ZERO","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(q0 * q0)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(real * factor.imaginary) + (imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","pos.setErrorIndex(startIndex)","(k >= omegaCount)","(real * factor.real)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q2.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","imaginary","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","getQ0()","(!isInfinite())","pos.setErrorIndex(real)","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","((imaginary * q) - real) / denominator","isInfinite","java.lang.Double.isNaN(real)","subtrahend.getImaginary()","((q1a * q2d) + (q1b * q2c))","java.lang.Double.isInfinite(divisor)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","org.apache.commons.math3.util.FastMath.abs(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.abs(imaginary)","q","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","toAppendTo.setLength(real)","q1.getQ0()","pos.setBeginIndex(real)","-unitQ.getQ2()","complex.getReal()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","r * org.apache.commons.math3.util.FastMath.sin(theta)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","real / imaginary","-real","addend.getReal()","org.apache.commons.math3.util.FastMath.sinh(real)","(q1d * q2d)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.MathUtils.hash(real)","(k < 0) || (k >= omegaCount)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","abs()","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(real * q)","2.0 * real","-im","q.getQ3()","2.0","-imaginary","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","(imaginary * factor.real)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(real == c.real) && (imaginary == c.imaginary)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","java.lang.Double.isNaN(addend)","((double.) (real))","divisor.isInfinite()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(q1b * q2d)","imaginaryCharacter == null","this == other","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","7","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","-1.0","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.log(real)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())"]
[DEBUG] DetailLog:460 - choose ingredient: (-q1) / squareNorm
[DEBUG] DetailLog:479 - add used element: (-q1) / squareNorm
[DEBUG] DetailLog:437 - BaseElements for 314-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtFieldReadImpl: size: 436 ["ZERO","isInfinite","I","NaN","((double.) (imaginary))","q2.getQ3()","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","im.doubleValue()","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","format == null","(real * factor.real) - (imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","imaginary + addend.getImaginary()","(-q2)","getQ3()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","java.lang.Double.isInfinite(factor.imaginary)","INF","r < 0","37","org.apache.commons.math3.util.FastMath.abs(imaginary)","addend.getImaginary()","org.apache.commons.math3.util.FastMath.cos(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","isNaN || subtrahend.isNaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.log(abs())","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","-scale","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","scale","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","-1.0","unitQ.getQ1()","this == other","(q1c * q2b)","(31 * result)","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","omegaImaginaryClockwise[k]","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","imaginaryCharacter.length() == 0","divisor.isInfinite()","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","unitQ.getQ0()","getArgument() / n","realFormat == null","(q1c * q2a)","(2.0 * t)","isNaN || java.lang.Double.isInfinite(imaginary)","q1.getQ1() + q2.getQ1()","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(-scale) * q","7","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","imaginaryCharacter == null","(q1b * q2d)","java.lang.Double.isNaN(divisor)","scale * q","java.lang.Double.isNaN(imaginary)","(!isNaN)","-real","omegaReal[k]","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","((imaginary * q) + real) / denominator","re.doubleValue()","(q1c * q2d)","'+'","-q2","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","-6195664516687396620L","ONE","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary < (-20.0)","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","toAppendTo.setLength(imaginary)","(-q3)","17","divisor.getImaginary()","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","org.apache.commons.math3.util.FastMath.exp(imaginary)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","(omegaReal[i - 1] * sinT)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","real","java.lang.Double.isNaN(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","org.apache.commons.math3.util.FastMath.log(imaginary)","real < (-20.0)","real >= 0.0","q2 / norm","result.add(org.apache.commons.math3.complex.Complex.INF)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","(c == 0.0) && (d == 0.0)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","20120201L","-1","pos.setErrorIndex(imaginary)","org.apache.commons.math3.util.FastMath.sinh(real)","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","java.lang.Double.isInfinite(divisor)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","getReal()","6130362688700788798L","unitQ.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","subtrahend.getImaginary()","pos.setBeginIndex(imaginary)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","org.apache.commons.math3.util.FastMath.sin(real2)","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","isNaN","java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","pos.setEndIndex(imaginary)","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","-omegaImaginaryCounterClockwise[i]","q1.getQ2() + q2.getQ2()","(k < 0)","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","1.0 / n","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","isNaN || java.lang.Double.isNaN(divisor)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.MathUtils.hash(imaginary)","real + addend.getReal()","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","(-20.0)","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.abs(real)","-im","q.getQ3()","(real * q)","2.0 * real","abs()","divisor.isInfinite() && (!isInfinite())","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","java.lang.Double.isInfinite(imaginary)","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","real == 0.0","-unitQ.getQ1()","org.apache.commons.math3.util.FastMath.abs(c)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","-imaginary","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","isInfinite()","1","isNaN || java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.abs(n)","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","org.apache.commons.math3.util.FastMath.sin(imaginary)","real[i]","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","false","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","unitQ.getQ3()","0","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q","org.apache.commons.math3.util.MathUtils.hash(real)","imaginary / real","(q1b * q2a)","(c * q)","!isInfinite()","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","pos.setIndex(imaginary)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)"]
[DEBUG] DetailLog:460 - choose ingredient: r * org.apache.commons.math3.util.FastMath.cos(theta)
[DEBUG] DetailLog:479 - add used element: r * org.apache.commons.math3.util.FastMath.cos(theta)
[DEBUG] DetailLog:460 - choose ingredient: (k < 0)
[DEBUG] DetailLog:479 - add used element: (k < 0)
[DEBUG] DetailLog:460 - choose ingredient: divisor.getImaginary()
[DEBUG] DetailLog:479 - add used element: divisor.getImaginary()
[DEBUG] DetailLog:549 - new modification added. element: ZERO
[DEBUG] DetailLog:549 - new modification added. element: ZERO.getImaginary()
[DEBUG] DetailLog:460 - choose ingredient: (q1b * q2b)
[DEBUG] DetailLog:479 - add used element: (q1b * q2b)
[DEBUG] DetailLog:460 - choose ingredient: (org.apache.commons.math3.util.FastMath.abs(real) + abs())
[DEBUG] DetailLog:479 - add used element: (org.apache.commons.math3.util.FastMath.abs(real) + abs())
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: real
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.util.FastMath.abs(real)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: abs()
[DEBUG] DetailLog:549 - new modification added. element: (org.apache.commons.math3.util.FastMath.abs(real) + abs())
[DEBUG] DetailLog:437 - BaseElements for 314-1.0 / ((real * q) + imaginary)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl: size: 428 ["ZERO","NaN","I","-imaginary","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","1.0 / ((imaginary * q) + real)","(real * factor.imaginary)","v[2]","unitQ.getQ3()","(q1b * q2c)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","(!isInfinite())","(q2 == q.getQ2())","((imaginary * q) - real) / denominator","((q1a * q2a) - (q1b * q2b))","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","INF","org.apache.commons.math3.util.FastMath.sin(real)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","isInfinite()","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","org.apache.commons.math3.util.FastMath.exp(real)","real + addend","false","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","(1.0 / (real * q)) + imaginary","subtrahend.getImaginary()","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","org.apache.commons.math3.util.FastMath.abs(imaginary)","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isInfinite(divisor)","java.lang.Double.isNaN(real)","ONE","-6195664516687396620L","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","(2.0 * org.apache.commons.math3.util.FastMath.PI)","((imaginary * q) + real)","alpha * q1","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","java.lang.Double.isNaN(imaginary)","java.lang.Double.isNaN(divisor)","scale","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.sinh(imaginary)","isNaN || java.lang.Double.isNaN(addend)","imaginary - subtrahend.getImaginary()","3","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","divisor.isInfinite()","scale * q","q1.getQ1() + q2.getQ1()","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","getArgument() / n","(q1c * q2a)","unitQ.getQ0()","realFormat == null","isNaN || java.lang.Double.isInfinite(imaginary)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.abs(d)","(!isNaN)","getQ0() < 0","imaginary > 20.0","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","divisor.getReal()","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","-6130362688700788798L","im < 0.0","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","(k < 0)","real > 20.0","2.0 * imaginary","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","imaginary","org.apache.commons.math3.util.FastMath.abs(real)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.abs(c)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","addend.getReal()","java.lang.Double.isNaN(addend)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","(real == c.real)","(-20.0)","1.0 / n","real + addend.getReal()","i++","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.cos(real2)","java.lang.Double.isInfinite(real)","q.getQ0()","(q1 == q.getQ1())","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","q1.getQ3() - q2.getQ3()","n > 0","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","isNaN || factor.isNaN","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real","isNaN","isInfinite","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","17","imaginary < (-20.0)","subtrahend.getReal()","-scale","q","divisor.getImaginary()","((java.lang.Number) (obj)).doubleValue()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t"]
[DEBUG] DetailLog:460 - choose ingredient: re.doubleValue()
[DEBUG] DetailLog:479 - add used element: re.doubleValue()
[DEBUG] DetailLog:460 - choose ingredient: imaginary - subtrahend.getImaginary()
[DEBUG] DetailLog:479 - add used element: imaginary - subtrahend.getImaginary()
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: imaginary
[DEBUG] DetailLog:549 - new modification added. element: ZERO
[DEBUG] DetailLog:549 - new modification added. element: ZERO.getImaginary()
[DEBUG] DetailLog:549 - new modification added. element: imaginary - ZERO.getImaginary()
[DEBUG] DetailLog:437 - BaseElements for 314-double scale = 1.0 / ((real * q) + imaginary)-InsertAfterOp : MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtLocalVariableImpl: size: 242 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","return java.lang.Double.NaN","if (isNaN) {	return java.lang.Double.NaN;}","return java.lang.Double.POSITIVE_INFINITY","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","return org.apache.commons.math3.util.FastMath.abs(real)","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","return org.apache.commons.math3.util.FastMath.abs(imaginary)","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","return org.apache.commons.math3.complex.Complex.NaN","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend.getReal(), imaginary + addend.getImaginary())","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend, imaginary)","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.ZERO","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator)","return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator)","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real / divisor, imaginary / divisor)","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(scale * q, -scale)","return createComplex(scale, (-scale) * q)","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","return true","if (this == other) {	return true;}","return isNaN","return (real == c.real) && (imaginary == c.imaginary)","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","return false","return 7","if (isNaN) {	return 7;}","return 37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","return imaginary","return real","return isInfinite","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.INF","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex((real * factor.real) - (imaginary * factor.imaginary), (real * factor.imaginary) + (imaginary * factor.real))","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(real * factor, imaginary * factor)","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(-real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend.getReal(), imaginary - subtrahend.getImaginary())","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend, imaginary)","return this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0)))","return createComplex(org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), (-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(expReal * org.apache.commons.math3.util.FastMath.cos(imaginary), expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.log(abs()), org.apache.commons.math3.util.FastMath.atan2(imaginary, real))","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","return this.log().multiply(x).exp()","return createComplex(org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(0.0, 0.0)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","return createComplex(t, imaginary / (2.0 * t))","return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt()","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(0.0, 1.0)","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","return createComplex(0.0, -1.0)","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sin(real2) / d, org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(1.0, 0.0)","if (real > 20.0) {	return createComplex(1.0, 0.0);}","return createComplex(-1.0, 0.0)","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real2) / d, org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","return org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","return result","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","return new org.apache.commons.math3.complex.Complex(realPart, imaginaryPart)","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return new org.apache.commons.math3.complex.Complex(realPart)","return createComplex(real, imaginary)","return org.apache.commons.math3.complex.ComplexField.getInstance()","return ((("(" + real) + ", ") + imaginary) + ")"","return org.apache.commons.math3.complex.ComplexField.LazyHolder.INSTANCE","return org.apache.commons.math3.complex.Complex.ONE","return org.apache.commons.math3.complex.Complex.class","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","return java.text.NumberFormat.getAvailableLocales()","return format(c, new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","return format(new org.apache.commons.math3.complex.Complex(c, 0), new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","return toAppendTo","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","return ret","return imaginaryCharacter","return imaginaryFormat","return org.apache.commons.math3.complex.ComplexFormat.getInstance(java.util.Locale.getDefault())","return new org.apache.commons.math3.complex.ComplexFormat(f)","return new org.apache.commons.math3.complex.ComplexFormat(imaginaryCharacter, f)","return realFormat","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","return null","if (re == null) {	pos.setIndex(initialIndex);	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), 0.0)","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), im.doubleValue() * sign)","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","return new org.apache.commons.math3.complex.Complex(r * org.apache.commons.math3.util.FastMath.cos(theta), r * org.apache.commons.math3.util.FastMath.sin(theta))","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","return c","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","return new org.apache.commons.math3.complex.Quaternion(q0, -q1, -q2, -q3)","return new org.apache.commons.math3.complex.Quaternion(w, x, y, z)","return org.apache.commons.math3.complex.Quaternion.multiply(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() + q2.getQ0(), q1.getQ1() + q2.getQ1(), q1.getQ2() + q2.getQ2(), q1.getQ3() + q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.add(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() - q2.getQ0(), q1.getQ1() - q2.getQ1(), q1.getQ2() - q2.getQ2(), q1.getQ3() - q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.subtract(this, q)","return (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","return org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / norm, q1 / norm, q2 / norm, q3 / norm)","return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","return ((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","return org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","return org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3())","return this.normalize()","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / squareNorm, (-q1) / squareNorm, (-q2) / squareNorm, (-q3) / squareNorm)","return q0","return q1","return q2","return q3","return getQ0()","return new double[]{ getQ1(), getQ2(), getQ3() }","return new org.apache.commons.math3.complex.Quaternion(alpha * q0, alpha * q1, alpha * q2, alpha * q3)","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","return s.toString()","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","return isCounterClockWise","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","return","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}","return omegaReal[k]","return isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","return omegaCount"]
[DEBUG] DetailLog:460 - choose ingredient: return isNaN
[DEBUG] DetailLog:479 - add used element: return isNaN
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: isNaN
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:437 - BaseElements for 317-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtFieldReadImpl: size: 435 ["real","NaN","I","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","(real == 0.0)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","java.lang.Double.isInfinite(divisor)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","q.getQ1()","(-q1) / squareNorm","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","-q1","n <= 0","((q1a * q2b) + (q1b * q2a))","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","((q1a * q2c) - (q1b * q2d))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","java.lang.Double.isNaN(real)","isInfinite()","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","real >= 0.0","q2 / norm","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(real)","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(n)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","2","i < real.length","d / c","k < n","pos.setErrorIndex(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","org.apache.commons.math3.util.FastMath.sinh(real)","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","real + addend","false","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","(d == 0.0)","1.0 / ((imaginary * q) + real)","org.apache.commons.math3.util.FastMath.exp(real)","org.apache.commons.math3.util.FastMath.abs(real)","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.abs(c)","(real == 0.0) && (imaginary == 0.0)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","pos.setEndIndex(imaginary)","java.lang.Double.isNaN(realPart)","-imaginary","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","INF","ONE","addend.getImaginary()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","((imaginary * q) + real)","-scale","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.cosh(real2)","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","isNaN || subtrahend.isNaN","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.sin(imaginary)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.FastMath.log(abs())","((double.) (imaginary))","-6195664516687396620L","37","r < 0","divisor.isInfinite()","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","unitQ.getQ0()","getArgument() / n","realFormat == null","(q1c * q2a)","scale * q","q1.getQ1() + q2.getQ1()","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(2.0 * t)","java.lang.Double.isNaN(divisor)","ZERO","java.lang.Double.isNaN(imaginary)","obj instanceof java.lang.Number","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.log(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","(!isNaN)","getQ0() < 0","pos.setBeginIndex(imaginary)","((imaginary * q) + real) / denominator","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","q2.getQ2()","(q1d * q2c)","(q1d * q2b)","imaginary > 20.0","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","isNaN","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","(c * q)","(q1b * q2a)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary < (-20.0)","imaginary / real","!isInfinite()","(imaginary * factor.imaginary)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","subtrahend.getReal()","20.0","((real * q) + imaginary) / denominator","(-q3) / squareNorm","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","imaginaryFormat == null","pos.setIndex(imaginary)","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","isInfinite","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","parsePosition.getIndex()","obj instanceof org.apache.commons.math3.complex.Complex","imaginary + addend.getImaginary()","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","imaginary * factor","(omegaReal[i - 1] * sinT)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","(-q2)","getQ3()","r * org.apache.commons.math3.util.FastMath.cos(theta)","divisor.getImaginary()","org.apache.commons.math3.util.MathUtils.hash(imaginary)","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","result.add(createComplex(realPart, imaginaryPart))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","(q1 * q1)","q0 / squareNorm","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","java.lang.Double.isInfinite(factor.imaginary)","re == null","(q1c * q2c)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","pos.setIndex(initialIndex)","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(c * q) + d","complex.getImaginary()","q3 / norm","java.lang.Double.isNaN(im)","alpha * q3","getArgument()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","toAppendTo.setLength(0)","java.lang.Double.isInfinite(imaginary)","q","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","java.lang.Double.isInfinite(real)","divisor.getReal()","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","org.apache.commons.math3.util.FastMath.cosh(imaginary)","(q1 == q.getQ1())","isNaN || factor.isNaN","q.getQ0()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","org.apache.commons.math3.util.FastMath.cos(imaginary)","re.doubleValue()","'+'","(q1c * q2d)","java.lang.Double.isNaN(addend)","(q1a * q2b)","toAppendTo.setLength(imaginary)","(q0 == q.getQ0())","getQ2()","(real == c.real)","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(-20.0)","1.0 / n","real + addend.getReal()","i++","1.0 / ((real * q) + imaginary)","real * factor","q1.getQ0() + q2.getQ0()","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","org.apache.commons.math3.util.FastMath.cos(real2)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","v.length != 3","n == 0","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","org.apache.commons.math3.util.FastMath.exp(imaginary)","addend.getReal()"]
[DEBUG] DetailLog:460 - choose ingredient: im == null
[DEBUG] DetailLog:479 - add used element: im == null
[DEBUG] DetailLog:460 - choose ingredient: parsePosition.getErrorIndex()
[DEBUG] DetailLog:479 - add used element: parsePosition.getErrorIndex()
[DEBUG] DetailLog:460 - choose ingredient: (d == 0.0)
[DEBUG] DetailLog:479 - add used element: (d == 0.0)
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.abs(imaginary)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.abs(imaginary)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: imaginary
[DEBUG] DetailLog:549 - new modification added. element: org.apache.commons.math3.util.FastMath.abs(imaginary)
[DEBUG] DetailLog:460 - choose ingredient: -unitQ.getQ2()
[DEBUG] DetailLog:479 - add used element: -unitQ.getQ2()
[DEBUG] DetailLog:437 - BaseElements for 317-double q = imaginary / real-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtLocalVariableImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: if (getQ0() < 0) {
	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();
	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());
} else {
	return this.normalize();
}
[DEBUG] DetailLog:479 - add used element: if (getQ0() < 0) {
	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();
	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());
} else {
	return this.normalize();
}
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: getQ0()
[DEBUG] DetailLog:549 - new modification added. element: 0
[DEBUG] DetailLog:549 - new modification added. element: getQ0() < 0
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: normalize()
[DEBUG] DetailLog:549 - new modification added. element: unitQ
[DEBUG] DetailLog:549 - new modification added. element: unitQ.getQ0()
[DEBUG] DetailLog:549 - new modification added. element: -unitQ.getQ0()
[DEBUG] DetailLog:549 - new modification added. element: unitQ
[DEBUG] DetailLog:549 - new modification added. element: unitQ.getQ1()
[DEBUG] DetailLog:549 - new modification added. element: -unitQ.getQ1()
[DEBUG] DetailLog:549 - new modification added. element: unitQ
[DEBUG] DetailLog:549 - new modification added. element: unitQ.getQ2()
[DEBUG] DetailLog:549 - new modification added. element: -unitQ.getQ2()
[DEBUG] DetailLog:549 - new modification added. element: unitQ
[DEBUG] DetailLog:549 - new modification added. element: unitQ.getQ3()
[DEBUG] DetailLog:549 - new modification added. element: -unitQ.getQ3()
[DEBUG] DetailLog:549 - new modification added. element: new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3())
[DEBUG] DetailLog:549 - new modification added. element: this
[DEBUG] DetailLog:549 - new modification added. element: this.normalize()
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.cos(theta)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.cos(theta)
[DEBUG] DetailLog:437 - BaseElements for 318-imaginary-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtFieldReadImpl: size: 436 ["ZERO","NaN","I","divisor.getImaginary()","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","absN == omegaCount","(-q3)","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","result.add(createComplex(realPart, imaginaryPart))","17","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isNaN(im)","alpha * q3","imaginary + addend.getImaginary()","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","imaginary * factor","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","pos.setEndIndex(imaginary)","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","INF","divisor.getReal()","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","org.apache.commons.math3.util.FastMath.cos(imaginary)","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","(k < 0)","real > 20.0","2.0 * imaginary","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","org.apache.commons.math3.util.FastMath.cosh(imaginary)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","imaginary > 20.0","getQ0() < 0","(q1d * q2b)","q2.getQ2()","(q1d * q2c)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","((imaginary * q) + real) / denominator","java.lang.Double.isInfinite(real)","(q1 == q.getQ1())","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","real / imaginary","-unitQ.getQ2()","complex.getReal()","q1.getQ0()","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","-6195664516687396620L","((real * q) + imaginary)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","isNaN || subtrahend.isNaN","r < 0","37","org.apache.commons.math3.util.FastMath.cosh(real2)","isNaN || addend.isNaN","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","q.getQ2()","java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.sin(imaginary)","(2.0 * t)","getArgument() / n","unitQ.getQ0()","realFormat == null","(q1c * q2a)","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","scale * q","q1.getQ1() + q2.getQ1()","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.sinh(real2)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","imaginary - subtrahend.getImaginary()","3","pos.setEndIndex(0)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(q1.getQ1() * q2.getQ1())","obj instanceof java.lang.Number","isNaN || java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.abs(d)","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","divisor.isInfinite()","(!isNaN)","ONE","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","1 + (q * q)","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","imaginary / divisor","java.lang.Double.isInfinite(divisor)","org.apache.commons.math3.util.FastMath.sin(real2)","(-q1)","parsePosition.getErrorIndex()","((q1a * q2d) + (q1b * q2c))","q1.getQ3() + q2.getQ3()","(d * q) + c","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q1","q.getQ1()","(-q1) / squareNorm","q1.getQ2()","-q3","org.apache.commons.math3.util.FastMath.exp(imaginary)","((q1a * q2c) - (q1b * q2d))","(real == 0.0)","getReal()","n <= 0","((q1a * q2b) + (q1b * q2a))","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","((double.) (imaginary))","java.lang.Double.isNaN(real)","real >= 0.0","real < (-20.0)","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","6195664516687396620L","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(factor)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.FastMath.abs(imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","(imaginary * q)","v[0]","getNorm()","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","org.apache.commons.math3.util.FastMath.sin(real)","pos.getIndex()","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sinh(real)","java.lang.Double.isInfinite(imaginary)","isInfinite()","omegaReal[i - 1]","real[i]","org.apache.commons.math3.util.FastMath.log(imaginary)","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","real / divisor","1","isNaN || java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.abs(n)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","toAppendTo.setLength(imaginary)","getQ1()","isNaN || java.lang.Double.isNaN(factor)","2","i < real.length","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","(c == 0.0) && (d == 0.0)","(-scale)","java.lang.Double.isInfinite(factor.real)","v[1]","pos.setIndex(imaginary)","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.exp(real)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real + addend","(d == 0.0)","1.0 / ((imaginary * q) + real)","false","0","q2.getQ0()","org.apache.commons.math3.util.FastMath.sin(theta)","(real * factor.imaginary)","(q1b * q2c)","v[2]","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","unitQ.getQ3()","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.abs(real)","-im","real == 0.0","-unitQ.getQ1()","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","2.0","org.apache.commons.math3.util.FastMath.abs(c)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(imaginary * factor.real)","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","-imaginary","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","31","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaCount - 1","((imaginary * q) - real) / denominator","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","real","scale","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","(real == c.real)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","java.lang.Double.isNaN(addend)","getQ2()","(q1a * q2b)","java.lang.Double.isNaN(imaginary)","addend.getReal()","abs()","(real * q)","2.0 * real","q.getQ3()","divisor.isInfinite() && (!isInfinite())","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.sinh(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2)","(q0 == q.getQ0())","i++","real + addend.getReal()","1.0 / ((real * q) + imaginary)","(q1a * q2a)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(-20.0)","1.0 / n","isNaN || divisor.isNaN","org.apache.commons.math3.util.FastMath.cos(innerPart)","pos.setErrorIndex(imaginary)","(q1d * q2d)","isNaN || java.lang.Double.isNaN(divisor)","(31 * result) + c","(q1a * q2d)","(q2 * q2)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","divisor == 0.0","org.apache.commons.math3.util.FastMath.sin(innerPart)","isNaN","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","pos.setBeginIndex(imaginary)","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.log(abs())","((imaginary * q) + real)","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","addend.getImaginary()","!isInfinite()","org.apache.commons.math3.util.MathUtils.hash(imaginary)","subtrahend.getReal()","((real * q) + imaginary) / denominator","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","real - subtrahend","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.MathUtils.hash(real)","imaginaryFormat == null","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","(c * q)","(q1b * q2a)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","imaginary < (-20.0)","imaginary / real","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","org.apache.commons.math3.util.FastMath.sqrt(imaginary)","isInfinite","subtrahend.getImaginary()","q"]
[DEBUG] DetailLog:460 - choose ingredient: (q1d * q2d)
[DEBUG] DetailLog:479 - add used element: (q1d * q2d)
[DEBUG] DetailLog:460 - choose ingredient: this.q0 = a
[DEBUG] DetailLog:479 - add used element: this.q0 = a
[DEBUG] DetailLog:437 - BaseElements for 312-org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtBinaryOperatorImpl: size: 1004 ["(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && isInfinite()","I","NaN","INF","divisor.getImaginary()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (2.0 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q0 * q0) + (q1 * q1))","absN == omegaCount","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (re == null)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(factor)","(-org.apache.commons.math3.util.FastMath.sin(real))","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2))","result.add(createComplex(realPart, imaginaryPart))","17","imaginary < (-20.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaImaginaryCounterClockwise[i - 1] * cosT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (k < 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary == c.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (31 * result)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","(2 * org.apache.commons.math3.util.FastMath.PI)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1b * q2a)","(-q3)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (this == other)","addend.getImaginary()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real < (-20.0))","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q0 * q0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaCount == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart))","b","(2.0 * org.apache.commons.math3.util.FastMath.PI)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q1a * q2d) + (q1b * q2c))","alpha * q1","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t))","((imaginary * q) + real)","org.apache.commons.math3.util.FastMath.log(abs())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (i - 1)","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","(imaginary * factor.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q2 * q2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (v.length != 3)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","20.0","q2","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (getArgument() / n)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","(c == 0.0)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary < (-20.0))","(im > 0.0)","(q1a * q2c)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((-q3) / squareNorm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isNaN(addend))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isNaN(subtrahend))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (r < 0)","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary * factor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (d / c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (1.0 / ((real * q) + imaginary))","org.apache.commons.math3.util.MathUtils.hash(real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d))","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ3() - q2.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (k < 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary - ZERO.getImaginary())","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.cos(theta)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart))","imaginaryFormat == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (n > 0)","((real * q) + imaginary) / denominator","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (alpha * q0)","(-q3) / squareNorm","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q3 * q3)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ0() - q2.getQ0())","real - subtrahend","realPart","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real == c.real) && (imaginary == c.imaginary))","imaginary / real","(q1b * q2a)","(c * q)","z","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q0 == q.getQ0()) && (q1 == q.getQ1()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary * factor)","subtrahend.getReal()","-scale","java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(imaginary)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT))","isNaN || addend.isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (c * q)","q.getQ2()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(NaN.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (divisor.isInfinite() && (!isInfinite()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real * scale)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ1() + q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.cos(t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real * isInfinite) + scale)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ0() + q2.getQ0())","(q1d * q2a)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || result.add(createComplex(realPart, imaginaryPart))","isNaN || subtrahend.isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real >= 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1c * q2b)","((real * q) + imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sin(real2) / d)","r < 0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((imaginary * q) + real) / denominator)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sinh(real2) / d)","37","org.apache.commons.math3.util.FastMath.cosh(real2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (format == null)","org.apache.commons.math3.util.FastMath.abs(getQ0())","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary - ZERO.getImaginary())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1c * q2a)","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary / divisor)","org.apache.commons.math3.util.FastMath.cosh(imaginary)","factor.real","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaCount - 1)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isInfinite(imaginary))","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary > 20.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q2 / norm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary <= 0)","q2.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ1() + q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaCount - 1)","im.doubleValue()","c","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real * q) + imaginary)","org.apache.commons.math3.util.MathUtils.hash(comp)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q3 * q3)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ1() * q2.getQ1())","omegaImaginaryClockwise[0]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (d * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((-scale) * q)","-unitQ.getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((2.0 * org.apache.commons.math3.util.FastMath.PI) / absN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (im > 0.0)","q0 / norm","squareNorm","format == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real / imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","(real * factor.imaginary) + (imaginary * factor.real)","pos.setErrorIndex(startIndex)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (im < 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (2.0 * real)","(q0 * q0)","(q1b * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3()))","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps)","(k >= omegaCount)","c / d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isInfinite(imaginary))","n","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q1a * q2a) - (q1b * q2b))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1c * q2c)","omegaImaginaryClockwise[i]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q0 == q.getQ0())","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","q1c","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaReal[i - 1] * cosT)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || divisor.isNaN)","(real * factor.real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1 / norm)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.SAFE_MIN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary * q)","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ0() + q2.getQ0())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((-isInfinite) / scale)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (im == null)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","q1d","q1.getQ2() - q2.getQ2()","(omegaImaginaryCounterClockwise[i - 1] * cosT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1d * q2a)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","startIndex","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary))","imaginary == 0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real - subtrahend.getReal())","toAppendTo.setLength(0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (1.0 / ((imaginary * q) + real))","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ1() * q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (2.0 * real)","k","(q1 * q1)","q0 / squareNorm","imaginaryPart","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","org.apache.commons.math3.util.FastMath.cos(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1b * q2d)","cosT","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b))","c.isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real == c.real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (1 + (q * q))","q3 / norm","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT))","java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","alpha * q3","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ2() - q2.getQ2())","complex.getImaginary()","(c * q) + d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary * q)","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q1c * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (other instanceof org.apache.commons.math3.complex.Quaternion)","innerPart","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((31 * result) + c)","re == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isInfinite < isNaN)","nthRootOfAbs","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q0 / squareNorm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(factor)","(omegaReal[i - 1] * sinT)","imaginary * factor","expReal","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1c * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isInfinite(real))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary + addend.getImaginary()","parsePosition.getIndex()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1c * q2a)","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real > 20.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q1a * q2c) - (q1b * q2d))","(-q2)","getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (divisor.isInfinite() && (!isInfinite()))","java.lang.Double.isInfinite(factor.imaginary)","ONE","ZERO","1.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary <= 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary * factor.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(NaN.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (d * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((imaginary * q) - real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((imaginary * q) - real) / denominator)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2))","getNorm()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ2() - q2.getQ2())","sinT","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary * factor.real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(im)","(q * q)","v[0]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1a * q2b)","(imaginary * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && divisor.isInfinite()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(realPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real * q) + imaginary)","real.length","i - 1","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","addend.isNaN","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real >= isNaN)","((q0 * q0) + (q1 * q1))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q1a * q2b) + (q1b * q2a))","20092012L","org.apache.commons.math3.util.FastMath.sin(imaginary2)","org.apache.commons.math3.util.FastMath.sin(real2) / d","0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || subtrahend.isNaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (2.0 * imaginary)","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.sinh(real)","(imaginary == c.imaginary)","(q1.getQ3() * q2.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary < (-20.0))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN * scale)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","real - subtrahend.getReal()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ0() * q2.getQ0())","q1 / norm","q1.getQ1()","omegaImaginaryCounterClockwise[i]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3()))","getImaginary()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (alpha * q0)","isInfinite()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","omegaReal[i - 1]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (divisor == 0.0)","isNaN || java.lang.Double.isNaN(factor)","imaginary2","2","i < real.length","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (i < real.length)","alpha","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)))","isNaN || java.lang.Double.isNaN(subtrahend)","initialIndex","-1","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((im > 0.0) || java.lang.Double.isNaN(im))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaReal[i - 1] * sinT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","20120201L","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (obj instanceof java.lang.Number)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (v.length != 3)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((imaginary * q) + real)","org.apache.commons.math3.util.FastMath.abs(n)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (r * org.apache.commons.math3.util.FastMath.sin(theta))","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (1.0 / n)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ2() + q2.getQ2())","isCounterClockWise","getQ1()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","(c == 0.0) && (d == 0.0)","scale","k < n","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (31 * result)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (im.doubleValue() * sign)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ1() - q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isInfinite < isNaN)","real / divisor","d / c","(imaginary - (real * q))","q1","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginaryCharacter == null)","comp","1","org.apache.commons.math3.util.FastMath.sin(real)","pos.getIndex()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((c == 0.0) && (d == 0.0))","(omegaImaginaryCounterClockwise[i - 1] * sinT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q1a * q2a) - (q1b * q2b))","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","imaginary","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q0 == q.getQ0())","(q2 == q.getQ2())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (n == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((-q2) / squareNorm)","v[1]","java.lang.Double.isInfinite(factor.real)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","(d == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((isNaN - (isInfinite * q)) / real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1d * q2c)","1.0 / ((imaginary * q) + real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q0 / squareNorm)","v[2]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real * isInfinite) + scale)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary + addend.getImaginary())","omegaReal[i]","(omegaReal[i - 1] * cosT)","-unitQ.getQ0()","omegaReal[0]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","w","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (parsePosition.getIndex() == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","((imaginary * q) - real)","(imaginary == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real - subtrahend)","eps","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (im == null)","im.doubleValue() * sign","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (i < real.length)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1a * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginaryCharacter == null)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1a * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1b * q2c)","-imaginary","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(divisor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((d * q) + c)","toAppendTo.toString().equals("1")","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(im > 0.0) || java.lang.Double.isNaN(im)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1a * q2a)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (2.0 * t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((real * real) + imaginary) / q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real - subtrahend)","omegaCount - 1","(real == c.real) && (imaginary == c.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (realFormat == null)","31","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.FastMath.PI","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || result.add(org.apache.commons.math3.complex.Complex.NaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real + addend)","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginaryCharacter.length() == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (getQ0() < 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","((imaginary * q) - real) / denominator","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary / real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((c == 0.0) && (d == 0.0))","omegaImaginaryCounterClockwise[i - 1]","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","getQ0()","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","org.apache.commons.math3.util.FastMath.abs(c)","(real == 0.0) && (imaginary == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (parsePosition.getIndex() == 0)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real + addend)","nthPhi","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","(imaginary * factor.real)","java.lang.Double.isNaN(realPart)","(!isInfinite())","org.apache.commons.math3.util.FastMath.abs(real)","2.0","-unitQ.getQ1()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((-q3) / squareNorm)","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((k < 0) || (k >= omegaCount))","real == 0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real == 0.0) && (imaginary == 0.0))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(factor.real)","abs()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","(real * q)","c.real","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real * factor.imaginary)","re","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q1a * q2c) - (q1b * q2d))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || factor.isNaN)","2.0 * real","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real * factor.imaginary)","-im","q.getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (obj instanceof java.lang.Number)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real * factor.real) - (imaginary * factor.imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1b * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ1() - q2.getQ1())","(k < 0) || (k >= omegaCount)","divisor.isInfinite() && (!isInfinite())","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.sin(innerPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (2.0 * imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((2 * org.apache.commons.math3.util.FastMath.PI) / n)","1.0 / n","absN","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","divisor.isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN)","divisor == 0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (1.0 / n)","(31 * result) + c","isNaN || java.lang.Double.isNaN(divisor)","(-20.0)","org.apache.commons.math3.util.FastMath.cos(real2)","java.lang.Double.POSITIVE_INFINITY","isNaN || divisor.isNaN","i","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real * factor.imaginary) + (imaginary * factor.real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real / divisor)","(q1a * q2a)","real * factor","1.0 / ((real * q) + imaginary)","real + addend.getReal()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(real) + abs())","i++","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real >= 0.0)","q1.getQ0() + q2.getQ0()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(imaginaryPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real + addend.getReal())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1a * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (c / d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real + addend.getReal())","(q0 == q.getQ0())","q2c","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || divisor.isInfinite()","java.lang.Double.isInfinite(real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(addend)","q","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((org.apache.commons.math3.util.Precision.equals(real, q.getQ0(), imaginary) && org.apache.commons.math3.util.Precision.equals(isNaN, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary + addend.getImaginary())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((imaginary * q) + real)","(q1 == q.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaImaginaryCounterClockwise[i - 1] * cosT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (realFormat == null)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ0() - q2.getQ0())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real)))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || subtrahend.isNaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1d * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (expReal * org.apache.commons.math3.util.FastMath.cos(imaginary))","q2a","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN * scale)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","theta","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","n > 0","q1.getQ3() - q2.getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real * factor.real)","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1a * q2a)","q2b","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1 == q.getQ1())","i < absN","omegaCount","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (r * org.apache.commons.math3.util.FastMath.sin(theta))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","q.getQ0()","sign","isNaN || factor.isNaN","divisor.getReal()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && result.add(org.apache.commons.math3.complex.Complex.INF)","2.0 * imaginary","real > 20.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1 / norm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (alpha * q3)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","-6130362688700788798L","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1 * q1)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaCount == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q2 == q.getQ2())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ2() + q2.getQ2())","im < 0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary - (real * q))","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (format == null)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q0 * q0) + (q1 * q1)) + (q2 * q2))","java.lang.Double.isNaN(addend)","other instanceof org.apache.commons.math3.complex.Complex","imaginaryCharacter.length()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (alpha * q2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (i < absN)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","(real == c.real)","v.length != 3","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((31 * result) + c)","n == 0","(q3 * q3)","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ3() - q2.getQ3())","(2 * org.apache.commons.math3.util.FastMath.PI) / n","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real)))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary / divisor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((omegaReal[q - 1] * scale) - (omegaImaginaryCounterClockwise[i - 1] * imaginary))","getQ2()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary == c.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (absN == omegaCount)","(q1a * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q1a * q2b) + (q1b * q2a))","d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c))","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaReal[i - 1] * sinT)","t","real2","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","q1.getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((org.apache.commons.math3.util.Precision.equals(real, q.getQ0(), imaginary) && org.apache.commons.math3.util.Precision.equals(isNaN, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real * factor.real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((real * real) + imaginary) / q)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real >= isNaN)","factor.isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((-isInfinite) / scale)","denominator","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((isNaN - (isInfinite * q)) / real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real / imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (c == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q3 == q.getQ3())","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sin(real2) / d)","-unitQ.getQ2()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (getArgument() / n)","complex.getReal()","q1.getQ0()","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","real / imaginary","real","java.lang.Double.isNaN(real)","java.lang.Double.isNaN(factor)","java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","imaginary / divisor","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isNaN(subtrahend))","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","1 + (q * q)","java.lang.Double.isInfinite(factor)","6195664516687396620L","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary > 20.0)","a","pos.setBeginIndex(0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((-scale) * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (1.0 / ((imaginary * q) + real))","imaginary / (2.0 * t)","true","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real > 20.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (norm < org.apache.commons.math3.util.Precision.SAFE_MIN)","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d))","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(realPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (other instanceof org.apache.commons.math3.complex.Quaternion)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q3 == q.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (d / c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","java.lang.Double.isNaN(imaginaryPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(factor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (c / d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (r < 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a))","real < (-20.0)","slice","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || addend.isNaN)","factor.imaginary","real >= 0.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real / divisor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","q2d","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && result.add(org.apache.commons.math3.complex.Complex.NaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.abs(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((d * q) + c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real * factor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginaryFormat == null)","((q1a * q2c) - (q1b * q2d))","(real == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q2 / norm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isNaN(divisor))","getReal()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isInfinite(real))","((q1a * q2b) + (q1b * q2a))","n <= 0","(imaginary - (real * q)) / denominator","6130362688700788798L","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((q0 * q0) + (q1 * q1)) + (q2 * q2))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (absN == omegaCount)","unitQ.getQ2()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","java.lang.Double.isInfinite(divisor)","subtrahend.getImaginary()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && result.add(createComplex(realPart, imaginaryPart))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1 * q1)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (expReal * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isNaN(addend))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (other instanceof org.apache.commons.math3.complex.Complex)","org.apache.commons.math3.util.FastMath.sin(real2)","(d * q) + c","(-q1)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((2.0 * org.apache.commons.math3.util.FastMath.PI) / absN)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary / real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1c * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real * factor.imaginary) + (imaginary * factor.real))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (other instanceof org.apache.commons.math3.complex.Complex)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ2() * q2.getQ2())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1c * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q0 / norm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (2.0 * org.apache.commons.math3.util.FastMath.PI)","((q1a * q2d) + (q1b * q2c))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (im > 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (im.doubleValue() * sign)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaReal[i - 1] * cosT)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (im < 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(subtrahend)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(subtrahend)","y","omegaImaginaryCounterClockwise[0]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2))","-q3","(-q2) / squareNorm","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (alpha * q2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1d * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b))","-q1","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q1a * q2d) + (q1b * q2c))","q1.getQ2()","im == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","q.getQ1()","(-q1) / squareNorm","v.length","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q)))","isNaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((2 * org.apache.commons.math3.util.FastMath.PI) / n)","q0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (n == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && toAppendTo.toString().equals("1")","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","alpha * q0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real * scale)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ0() * q2.getQ0())","0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","org.apache.commons.math3.util.FastMath.sin(theta)","q3","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (alpha * q3)","q2.getQ0()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (divisor == 0.0)","(real * factor.imaginary)","unitQ.getQ3()","(q1b * q2c)","absIm","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(divisor)","(-scale)","q1b","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (n > 0)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginaryCharacter.length() == 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (c == 0.0)","real[i]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2))","org.apache.commons.math3.util.FastMath.exp(real)","real + addend","false","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((imaginary * q) + real) / denominator)","im","isInfinite","java.lang.Double.isNaN(imaginary)","scale * q","(2.0 * t)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1a * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (getQ0() < 0)","realFormat == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (i - 1)","q1.getQ1() + q2.getQ1()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1d * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1b * q2c)","isNaN || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (scale * q)","java.lang.Double.isNaN(divisor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || isInfinite()","divisor.isInfinite()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (1.0 / ((real * q) + imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1d * q2a)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (obj instanceof org.apache.commons.math3.complex.Complex)","(q1b * q2d)","(-scale) * q","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","scalar","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q0 / norm)","imaginaryCharacter == null","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((imaginary * q) - real)","getArgument() / n","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ3() * q2.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (i < absN)","(q1c * q2a)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ3() * q2.getQ3())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((real == c.real) && (imaginary == c.imaginary))","unitQ.getQ0()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary / (2.0 * t))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.sinh(real2) / d)","r","(31 * result)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","norm","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (2 * org.apache.commons.math3.util.FastMath.PI)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1.getQ3() + q2.getQ3())","(q1c * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || addend.isNaN)","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q0 * q0)","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real * factor.real) - (imaginary * factor.imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (omegaImaginaryCounterClockwise[i - 1] * sinT)","'-'","7","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || factor.isNaN)","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isNaN(factor))","this == other","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary == 0.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q2 * q2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real - subtrahend.getReal())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (1 + (q * q))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (c * q)","imaginaryCharacter.length() == 0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((-q2) / squareNorm)","subtrahend.isNaN","unitQ.getQ1()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","org.apache.commons.math3.util.FastMath.abs(d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginaryFormat == null)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (re == null)","-1.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isNaN(real)","org.apache.commons.math3.util.FastMath.sinh(real2)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((imaginary * q) - real) / denominator)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real < (-20.0))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (obj instanceof org.apache.commons.math3.complex.Complex)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q3 / norm)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((k < 0) || (k >= omegaCount))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1c * q2b)","pos.setEndIndex(0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && java.lang.Double.isInfinite(factor)","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1 == q.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN * org.apache.commons.math3.util.FastMath.cos(imaginary))","java.lang.Double.NaN","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (q1b * q2a)","(q1.getQ1() * q2.getQ1())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","imaginary - subtrahend.getImaginary()","q1a","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((q0 * q0) + (q1 * q1))","obj instanceof java.lang.Number","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary * factor.real)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (this == other)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (alpha * q1)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (real * factor)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN * org.apache.commons.math3.util.FastMath.cos(imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (scale * q)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1.getQ3() + q2.getQ3())","org.apache.commons.math3.util.FastMath.sinh(imaginary)","isNaN || java.lang.Double.isNaN(addend)","3","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((omegaReal[q - 1] * scale) - (omegaImaginaryCounterClockwise[i - 1] * imaginary))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.abs(real) + abs())","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(factor.real)","(!isNaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isInfinite(imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || result.add(org.apache.commons.math3.complex.Complex.INF)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (imaginary * factor.imaginary)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (2 * org.apache.commons.math3.util.FastMath.PI)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary))","re.doubleValue()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((real == 0.0) && (imaginary == 0.0))","-q2","'+'","(q1c * q2d)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((q0 == q.getQ0()) && (q1 == q.getQ1()))","((imaginary * q) + real) / denominator","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary - (real * q))","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","omegaCount == 0","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","q2.getQ2()","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (real == c.real)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary))","(q1d * q2b)","(q1d * q2c)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (omegaImaginaryCounterClockwise[i - 1] * sinT)","imaginary > 20.0","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","getQ0() < 0","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && ((((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || divisor.isNaN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q1a * q2b)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (norm < org.apache.commons.math3.util.Precision.SAFE_MIN)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (isNaN || java.lang.Double.isNaN(factor))","c.imaginary","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || java.lang.Double.isNaN(addend)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","q1.getQ2() + q2.getQ2()","(k < 0)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (q3 / norm)","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (isNaN || java.lang.Double.isNaN(divisor))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) && (imaginary / (2.0 * t))","omegaReal[k]","-omegaImaginaryCounterClockwise[i]","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || ((im > 0.0) || java.lang.Double.isNaN(im))","(org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) || (alpha * q1)","-real","-6195664516687396620L"]
[DEBUG] DetailLog:460 - choose ingredient: (q2 == q.getQ2())
[DEBUG] DetailLog:479 - add used element: (q2 == q.getQ2())
[DEBUG] DetailLog:460 - choose ingredient: 1.0 / ((imaginary * q) + real)
[DEBUG] DetailLog:479 - add used element: 1.0 / ((imaginary * q) + real)
[DEBUG] DetailLog:549 - new modification added. element: 1.0
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: imaginary
[DEBUG] DetailLog:549 - new modification added. element: q
[DEBUG] DetailLog:549 - new modification added. element: (imaginary * q)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: real
[DEBUG] DetailLog:549 - new modification added. element: ((imaginary * q) + real)
[DEBUG] DetailLog:549 - new modification added. element: 1.0 / ((imaginary * q) + real)
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.cos(real2)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.cos(real2)
[DEBUG] DetailLog:437 - BaseElements for 318-double scale = 1.0 / ((imaginary * q) + real)-InsertBeforeOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtLocalVariableImpl: size: 133 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","if (isNaN) {	return java.lang.Double.NaN;}","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","if (this == other) {	return true;}","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","if (isNaN) {	return 7;}","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (real > 20.0) {	return createComplex(1.0, 0.0);}","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","if (re == null) {	pos.setIndex(initialIndex);	return null;}","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}"]
[DEBUG] DetailLog:460 - choose ingredient: s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")
[DEBUG] DetailLog:479 - add used element: s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")
[DEBUG] DetailLog:460 - choose ingredient: true
[DEBUG] DetailLog:479 - add used element: true
[DEBUG] DetailLog:549 - new modification added. element: true
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:460 - choose ingredient: unitQ.getQ0()
[DEBUG] DetailLog:479 - add used element: unitQ.getQ0()
[DEBUG] DetailLog:460 - choose ingredient: omegaImaginaryCounterClockwise = new double[absN]
[DEBUG] DetailLog:479 - add used element: omegaImaginaryCounterClockwise = new double[absN]
[DEBUG] DetailLog:460 - choose ingredient: omegaCount - 1
[DEBUG] DetailLog:479 - add used element: omegaCount - 1
[DEBUG] DetailLog:460 - choose ingredient: (2.0 * t)
[DEBUG] DetailLog:479 - add used element: (2.0 * t)
[DEBUG] DetailLog:460 - choose ingredient: (q2 * q2)
[DEBUG] DetailLog:479 - add used element: (q2 * q2)
[DEBUG] DetailLog:460 - choose ingredient: org.apache.commons.math3.util.FastMath.cosh(real2)
[DEBUG] DetailLog:479 - add used element: org.apache.commons.math3.util.FastMath.cosh(real2)
[DEBUG] DetailLog:437 - BaseElements for 318-1.0 / ((imaginary * q) + real)-ReplaceExpressionOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl: size: 428 ["INF","I","NaN","realFormat == null","(q1c * q2a)","getArgument() / n","unitQ.getQ0()","scale * q","q1.getQ1() + q2.getQ1()","isNaN || java.lang.Double.isInfinite(imaginary)","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a))","(2.0 * t)","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","org.apache.commons.math3.util.FastMath.abs(d)","org.apache.commons.math3.util.FastMath.sinh(real2)","pos.setEndIndex(0)","obj instanceof java.lang.Number","(q1.getQ1() * q2.getQ1())","org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps)","(org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0","isNaN || java.lang.Double.isNaN(addend)","3","imaginary - subtrahend.getImaginary()","-1.0","imaginaryCharacter.length() == 0","(q1c * q2b)","(31 * result)","unitQ.getQ1()","(-scale) * q","(q1.getQ0() * q2.getQ0())","omegaImaginaryCounterClockwise[k]","imaginaryCharacter == null","(q1b * q2d)","7","'-'","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2()))","(((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","omegaImaginaryClockwise[k]","(-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","this == other","org.apache.commons.math3.util.FastMath.sinh(imaginary)","divisor.isInfinite()","(!isNaN)","java.lang.Double.isInfinite(real)","divisor.getReal()","((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(source, pos)","(k < 0)","-omegaImaginaryCounterClockwise[i]","omegaReal[k]","q1.getQ2() + q2.getQ2()","2.0 * imaginary","-6130362688700788798L","im < 0.0","((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1()))","real > 20.0","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)","i < absN","(org.apache.commons.math3.util.FastMath.abs(real) + abs())","n > 0","q1.getQ3() - q2.getQ3()","isNaN || factor.isNaN","q.getQ0()","(q1 == q.getQ1())","-real","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","-q2","re.doubleValue()","(q1c * q2d)","'+'","((imaginary * q) + real) / denominator","imaginary > 20.0","getQ0() < 0","(q1d * q2c)","(q1d * q2b)","org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","omegaCount == 0","isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","q2.getQ2()","java.lang.Double.isNaN(addend)","org.apache.commons.math3.util.FastMath.cos(real2)","getQ2()","(q0 == q.getQ0())","(q1a * q2b)","i++","real + addend.getReal()","isNaN || divisor.isNaN","1.0 / ((real * q) + imaginary)","37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","q1.getQ0() + q2.getQ0()","real * factor","(q1a * q2a)","org.apache.commons.math3.util.FastMath.cos(real)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","r * org.apache.commons.math3.util.FastMath.sin(theta)","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real))","nthRootOfAbs * org.apache.commons.math3.util.FastMath.cos(innerPart)","q1.getQ3()","other instanceof org.apache.commons.math3.complex.Complex","(real == c.real)","imaginaryCharacter.length()","n == 0","v.length != 3","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d)) - (q1d * q2c)","(q3 * q3)","(2 * org.apache.commons.math3.util.FastMath.PI) / n","org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","real / imaginary","complex.getReal()","-unitQ.getQ2()","q1.getQ0()","(!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","-6195664516687396620L","java.lang.Double.isNaN(divisor)","java.lang.Double.isInfinite(imaginary)","(d * q)","!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)","org.apache.commons.math3.util.FastMath.log(abs())","alpha * q1","(2.0 * org.apache.commons.math3.util.FastMath.PI)","org.apache.commons.math3.util.MathUtils.hash(imaginary)","org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real2)","(q1d * q2a)","org.apache.commons.math3.util.FastMath.cos(t)","org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)","((real * q) + imaginary)","37","isNaN || subtrahend.isNaN","r < 0","org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","q.getQ2()","(((q0 * q0) + (q1 * q1)) + (q2 * q2))","org.apache.commons.math3.util.FastMath.cos(real2) + org.apache.commons.math3.util.FastMath.cosh(imaginary2)","org.apache.commons.math3.util.FastMath.abs(getQ0())","isNaN || addend.isNaN","org.apache.commons.math3.util.FastMath.cosh(imaginary)","java.lang.Double.isNaN(imaginary)","q","addend.getReal()","(q1d * q2d)","org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","(k < 0) || (k >= omegaCount)","(-20.0)","1.0 / n","org.apache.commons.math3.util.FastMath.sin(innerPart)","isNaN || java.lang.Double.isNaN(divisor)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c)) - (q1d * q2d)","(q1a * q2d)","(q2 * q2)","divisor == 0.0","(31 * result) + c","org.apache.commons.math3.util.FastMath.cos(innerPart)","org.apache.commons.math3.util.FastMath.abs(real)","real == 0.0","2.0","(omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","-unitQ.getQ1()","abs()","(real * q)","2.0 * real","-im","q.getQ3()","divisor.isInfinite() && (!isInfinite())","((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)","-imaginary","toAppendTo.toString().equals("1")","(im > 0.0) || java.lang.Double.isNaN(im)","(omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","(org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps))","(imaginary * factor.real)","java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)","q1.getQ1() - q2.getQ1()","org.apache.commons.math3.util.FastMath.cosh(real2) + org.apache.commons.math3.util.FastMath.cos(imaginary2)","org.apache.commons.math3.util.FastMath.pow(abs(), 1.0 / n)","java.lang.Double.isNaN(realPart)","(real == 0.0) && (imaginary == 0.0)","org.apache.commons.math3.util.FastMath.abs(c)","(1.0 / (imaginary * q)) + real","ONE","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","imaginary + addend.getImaginary()","(-q2)","getQ3()","(omegaReal[i - 1] * sinT)","parsePosition.getIndex()","((q0 == q.getQ0()) && (q1 == q.getQ1()))","obj instanceof org.apache.commons.math3.complex.Complex","(17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))","r * org.apache.commons.math3.util.FastMath.cos(theta)","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b)) + (q1d * q2a)","imaginary * factor","org.apache.commons.math3.util.FastMath.cos(imaginary)","java.lang.Double.isNaN(im)","alpha * q3","(c * q) + d","squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN","q3 / norm","re == null","(q1c * q2c)","complex.getImaginary()","java.lang.Double.isInfinite(factor.imaginary)","org.apache.commons.math3.util.FastMath.cosh(real)","org.apache.commons.math3.util.FastMath.sqrt((org.apache.commons.math3.util.FastMath.abs(real) + abs()) / 2.0)","omegaImaginaryClockwise[0]","q0 / norm","format == null","org.apache.commons.math3.util.MathUtils.hash(comp)","-unitQ.getQ3()","(real * factor.real) - (imaginary * factor.imaginary)","q2.getQ3()","im.doubleValue()","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","c / d","omegaImaginaryClockwise[i]","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)","(real * factor.imaginary) + (imaginary * factor.real)","(q1b * q2b)","(((q1a * q2a) - (q1b * q2b)) - (q1c * q2c))","(q0 * q0)","org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary)","(k >= omegaCount)","pos.setErrorIndex(startIndex)","(real * factor.real)","org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","org.apache.commons.math3.util.FastMath.sinh(imaginary2)","getArgument()","pos.setIndex(initialIndex)","(omegaImaginaryCounterClockwise[i - 1] * cosT)","q1.getQ2() - q2.getQ2()","imaginary == 0.0","(((q1a * q2b) + (q1b * q2a)) + (q1c * q2d))","(q1 * q1)","q0 / squareNorm","toAppendTo.setLength(0)","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t","divisor.getImaginary()","!isInfinite()","result.add(org.apache.commons.math3.complex.Complex.NaN)","20.0","(imaginary * factor.imaginary)","org.apache.commons.math3.util.FastMath.atan2(imaginary, real)","org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","(c == 0.0)","(q1a * q2c)","q2.getQ1()","other instanceof org.apache.commons.math3.complex.Quaternion","(im > 0.0)","org.apache.commons.math3.util.MathUtils.hash(real)","org.apache.commons.math3.util.FastMath.cos(theta)","(((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3)","org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t)","(-q3) / squareNorm","imaginaryFormat == null","((real * q) + imaginary) / denominator","real - subtrahend","imaginary / real","(q1b * q2a)","org.apache.commons.math3.util.FastMath.sinh(real2) / d","(c * q)","(-org.apache.commons.math3.util.FastMath.sin(real))","result.add(createComplex(realPart, imaginaryPart))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2()))","(2 * org.apache.commons.math3.util.FastMath.PI)","((java.lang.Number) (obj)).doubleValue()","absN == omegaCount","(-q3)","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps))","17","imaginary < (-20.0)","subtrahend.getReal()","addend.getImaginary()","((imaginary * q) + real)","-scale","(2.0 * org.apache.commons.math3.util.FastMath.PI) / absN","((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","ZERO","-q1","q.getQ1()","(-q1) / squareNorm","nthRootOfAbs * org.apache.commons.math3.util.FastMath.sin(innerPart)","(d * q) + c","(-q1)","org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary)","subtrahend.getImaginary()","parsePosition.getErrorIndex()","q1.getQ3() + q2.getQ3()","((q1a * q2d) + (q1b * q2c))","org.apache.commons.math3.util.FastMath.sin(real2)","imaginary","i < real.length","isNaN || java.lang.Double.isNaN(factor)","omegaReal[i - 1]","isInfinite()","org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","(-scale)","alpha * q2","org.apache.commons.math3.util.FastMath.sin(t)","real[i]","java.lang.Double.isInfinite(factor.real)","v[1]","((imaginary * q) - real)","-unitQ.getQ0()","omegaReal[0]","omegaReal[i]","(omegaReal[i - 1] * cosT)","im.doubleValue() * sign","(imaginary == 0.0)","org.apache.commons.math3.util.FastMath.cos(imaginary2)","real + addend","(d == 0.0)","v[2]","(real * factor.imaginary)","org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary)","alpha * q0","org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)","unitQ.getQ3()","(q1b * q2c)","0","org.apache.commons.math3.util.FastMath.sin(theta)","q2.getQ0()","false","org.apache.commons.math3.util.FastMath.exp(real)","(!isInfinite())","(q2 == q.getQ2())","org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d","org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","getQ0()","org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","omegaImaginaryCounterClockwise[i - 1]","((q1a * q2a) - (q1b * q2b))","q1.getQ0() - q2.getQ0()","(real == c.real) && (imaginary == c.imaginary)","31","omegaCount - 1","((imaginary * q) - real) / denominator","real","isNaN","isInfinite","(real == 0.0)","((q1a * q2c) - (q1b * q2d))","java.lang.Double.isNaN(subtrahend)","1 + (q * q)","imaginary / divisor","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","expReal * org.apache.commons.math3.util.FastMath.cos(imaginary)","parsePosition.getIndex() == 0","org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary)","java.lang.Double.isNaN(factor)","java.lang.Double.isInfinite(factor)","6195664516687396620L","true","pos.setBeginIndex(0)","imaginary / (2.0 * t)","org.apache.commons.math3.util.FastMath.sin(imaginary2) / d","isNaN || java.lang.Double.isInfinite(real)","org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)","k++","(q1.getQ2() * q2.getQ2())","org.apache.commons.math3.util.FastMath.abs(imaginary)","java.lang.Double.isInfinite(divisor)","im == null","omegaImaginaryCounterClockwise[0]","(-q2) / squareNorm","-q3","q1.getQ2()","n <= 0","((q1a * q2b) + (q1b * q2a))","getReal()","java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","(imaginary - (real * q)) / denominator","6130362688700788798L","unitQ.getQ2()","scale","1","getQ1()","2","isNaN || java.lang.Double.isNaN(subtrahend)","org.apache.commons.math3.util.FastMath.abs(n)","-1","20120201L","expReal * org.apache.commons.math3.util.FastMath.sin(imaginary)","d / c","k < n","(((q1a * q2c) - (q1b * q2d)) + (q1c * q2a)) + (q1d * q2b)","(imaginary - (real * q))","org.apache.commons.math3.util.FastMath.cosh(imaginary2)","pos.getIndex()","(c == 0.0) && (d == 0.0)","real / divisor","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","(imaginary * q)","v[0]","getNorm()","1.0","i - 1","20092012L","norm < org.apache.commons.math3.util.Precision.SAFE_MIN","(q3 == q.getQ3())","((q0 * q0) + (q1 * q1))","(q * q)","result.add(org.apache.commons.math3.complex.Complex.INF)","q2 / norm","real >= 0.0","real < (-20.0)","java.lang.Double.isNaN(imaginaryPart)","org.apache.commons.math3.util.FastMath.sinh(real)","0.0","(((q1a * q2d) + (q1b * q2c)) - (q1c * q2b))","(((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","org.apache.commons.math3.util.FastMath.sin(real2) / d","(imaginary == c.imaginary)","(java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)","q1 / norm","(q1.getQ3() * q2.getQ3())","real - subtrahend.getReal()","q1.getQ1()","omegaImaginaryCounterClockwise[i]","getImaginary()","(omegaImaginaryCounterClockwise[i - 1] * sinT)","org.apache.commons.math3.util.FastMath.sin(imaginary2)","org.apache.commons.math3.util.FastMath.sin(real)","java.lang.Double.isNaN(real)"]
[DEBUG] DetailLog:460 - choose ingredient: 1.0 / n
[DEBUG] DetailLog:479 - add used element: 1.0 / n
[DEBUG] DetailLog:460 - choose ingredient: (q3 * q3)
[DEBUG] DetailLog:479 - add used element: (q3 * q3)
[DEBUG] DetailLog:460 - choose ingredient: real < (-20.0)
[DEBUG] DetailLog:479 - add used element: real < (-20.0)
[DEBUG] DetailLog:549 - new modification added. element: 
[DEBUG] DetailLog:549 - new modification added. element: real
[DEBUG] DetailLog:549 - new modification added. element: 20.0
[DEBUG] DetailLog:549 - new modification added. element: (-20.0)
[DEBUG] DetailLog:549 - new modification added. element: real < (-20.0)
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:437 - BaseElements for 318-double scale = 1.0 / ((imaginary * q) + real)-InsertAfterOp : MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtLocalVariableImpl: size: 242 ["this.real = real","this.imaginary = imaginary","isNaN = java.lang.Double.isNaN(real) || java.lang.Double.isNaN(imaginary)","isInfinite = (!isNaN) && (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary))","return java.lang.Double.NaN","if (isNaN) {	return java.lang.Double.NaN;}","return java.lang.Double.POSITIVE_INFINITY","if (isInfinite()) {	return java.lang.Double.POSITIVE_INFINITY;}","return org.apache.commons.math3.util.FastMath.abs(real)","if (imaginary == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(real);}","return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","return org.apache.commons.math3.util.FastMath.abs(imaginary)","if (real == 0.0) {	return org.apache.commons.math3.util.FastMath.abs(imaginary);}","return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q))","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	if (imaginary == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(real);	}	double q = real / imaginary;	return org.apache.commons.math3.util.FastMath.abs(imaginary) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));} else {	if (real == 0.0) {		return org.apache.commons.math3.util.FastMath.abs(imaginary);	}	double q = imaginary / real;	return org.apache.commons.math3.util.FastMath.abs(real) * org.apache.commons.math3.util.FastMath.sqrt(1 + (q * q));}","org.apache.commons.math3.util.MathUtils.checkNotNull(addend)","return org.apache.commons.math3.complex.Complex.NaN","if (isNaN || addend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend.getReal(), imaginary + addend.getImaginary())","if (isNaN || java.lang.Double.isNaN(addend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real + addend, imaginary)","if (isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(divisor)","if (isNaN || divisor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((c == 0.0) && (d == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.ZERO","if (divisor.isInfinite() && (!isInfinite())) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator)","return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator)","if (org.apache.commons.math3.util.FastMath.abs(c) < org.apache.commons.math3.util.FastMath.abs(d)) {	double q = c / d;	double denominator = (c * q) + d;	return createComplex(((real * q) + imaginary) / denominator, ((imaginary * q) - real) / denominator);} else {	double q = d / c;	double denominator = (d * q) + c;	return createComplex(((imaginary * q) + real) / denominator, (imaginary - (real * q)) / denominator);}","if (isNaN || java.lang.Double.isNaN(divisor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (divisor == 0.0) {	return org.apache.commons.math3.complex.Complex.NaN;}","return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN","if (java.lang.Double.isInfinite(divisor)) {	return !isInfinite() ? org.apache.commons.math3.complex.Complex.ZERO : org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real / divisor, imaginary / divisor)","if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (isInfinite) {	return org.apache.commons.math3.complex.Complex.ZERO;}","return createComplex(scale * q, -scale)","return createComplex(scale, (-scale) * q)","if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}","return true","if (this == other) {	return true;}","return isNaN","return (real == c.real) && (imaginary == c.imaginary)","if (c.isNaN) {	return isNaN;} else {	return (real == c.real) && (imaginary == c.imaginary);}","if (other instanceof org.apache.commons.math3.complex.Complex) {	org.apache.commons.math3.complex.Complex c = ((org.apache.commons.math3.complex.Complex) (other));	if (c.isNaN) {		return isNaN;	} else {		return (real == c.real) && (imaginary == c.imaginary);	}}","return false","return 7","if (isNaN) {	return 7;}","return 37 * ((17 * org.apache.commons.math3.util.MathUtils.hash(imaginary)) + org.apache.commons.math3.util.MathUtils.hash(real))","return imaginary","return real","return isInfinite","org.apache.commons.math3.util.MathUtils.checkNotNull(factor)","if (isNaN || factor.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return org.apache.commons.math3.complex.Complex.INF","if (((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor.real)) || java.lang.Double.isInfinite(factor.imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex((real * factor.real) - (imaginary * factor.imaginary), (real * factor.imaginary) + (imaginary * factor.real))","if (java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(real * factor, imaginary * factor)","if (isNaN || java.lang.Double.isNaN(factor)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if ((java.lang.Double.isInfinite(real) || java.lang.Double.isInfinite(imaginary)) || java.lang.Double.isInfinite(factor)) {	return org.apache.commons.math3.complex.Complex.INF;}","return createComplex(-real, -imaginary)","org.apache.commons.math3.util.MathUtils.checkNotNull(subtrahend)","if (isNaN || subtrahend.isNaN) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend.getReal(), imaginary - subtrahend.getImaginary())","if (isNaN || java.lang.Double.isNaN(subtrahend)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(real - subtrahend, imaginary)","return this.add(this.sqrt1z().multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return sqrt1z().add(this.multiply(org.apache.commons.math3.complex.Complex.I)).log().multiply(org.apache.commons.math3.complex.Complex.I.negate())","return this.add(org.apache.commons.math3.complex.Complex.I).divide(org.apache.commons.math3.complex.Complex.I.subtract(this)).log().multiply(org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0)))","return createComplex(org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), (-org.apache.commons.math3.util.FastMath.sin(real)) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(expReal * org.apache.commons.math3.util.FastMath.cos(imaginary), expReal * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.log(abs()), org.apache.commons.math3.util.FastMath.atan2(imaginary, real))","org.apache.commons.math3.util.MathUtils.checkNotNull(x)","return this.log().multiply(x).exp()","return createComplex(org.apache.commons.math3.util.FastMath.sin(real) * org.apache.commons.math3.util.FastMath.cosh(imaginary), org.apache.commons.math3.util.FastMath.cos(real) * org.apache.commons.math3.util.FastMath.sinh(imaginary))","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real) * org.apache.commons.math3.util.FastMath.cos(imaginary), org.apache.commons.math3.util.FastMath.cosh(real) * org.apache.commons.math3.util.FastMath.sin(imaginary))","return createComplex(0.0, 0.0)","if ((real == 0.0) && (imaginary == 0.0)) {	return createComplex(0.0, 0.0);}","return createComplex(t, imaginary / (2.0 * t))","return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t)","if (real >= 0.0) {	return createComplex(t, imaginary / (2.0 * t));} else {	return createComplex(org.apache.commons.math3.util.FastMath.abs(imaginary) / (2.0 * t), org.apache.commons.math3.util.FastMath.copySign(1.0, imaginary) * t);}","return createComplex(1.0, 0.0).subtract(this.multiply(this)).sqrt()","if (isNaN || java.lang.Double.isInfinite(real)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(0.0, 1.0)","if (imaginary > 20.0) {	return createComplex(0.0, 1.0);}","return createComplex(0.0, -1.0)","if (imaginary < (-20.0)) {	return createComplex(0.0, -1.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sin(real2) / d, org.apache.commons.math3.util.FastMath.sinh(imaginary2) / d)","if (isNaN || java.lang.Double.isInfinite(imaginary)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return createComplex(1.0, 0.0)","if (real > 20.0) {	return createComplex(1.0, 0.0);}","return createComplex(-1.0, 0.0)","if (real < (-20.0)) {	return createComplex(-1.0, 0.0);}","return createComplex(org.apache.commons.math3.util.FastMath.sinh(real2) / d, org.apache.commons.math3.util.FastMath.sin(imaginary2) / d)","return org.apache.commons.math3.util.FastMath.atan2(getImaginary(), getReal())","if (n <= 0) {	throw new org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_NTH_ROOT_FOR_NEGATIVE_N, n);}","result.add(org.apache.commons.math3.complex.Complex.NaN)","return result","if (isNaN) {	result.add(org.apache.commons.math3.complex.Complex.NaN);	return result;}","result.add(org.apache.commons.math3.complex.Complex.INF)","if (isInfinite()) {	result.add(org.apache.commons.math3.complex.Complex.INF);	return result;}","result.add(createComplex(realPart, imaginaryPart))","innerPart += slice","return new org.apache.commons.math3.complex.Complex(realPart, imaginaryPart)","if (java.lang.Double.isNaN(realPart) || java.lang.Double.isNaN(imaginaryPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","if (java.lang.Double.isNaN(realPart)) {	return org.apache.commons.math3.complex.Complex.NaN;}","return new org.apache.commons.math3.complex.Complex(realPart)","return createComplex(real, imaginary)","return org.apache.commons.math3.complex.ComplexField.getInstance()","return ((("(" + real) + ", ") + imaginary) + ")"","return org.apache.commons.math3.complex.ComplexField.LazyHolder.INSTANCE","return org.apache.commons.math3.complex.Complex.ONE","return org.apache.commons.math3.complex.Complex.class","this.imaginaryCharacter = org.apache.commons.math3.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER","this.imaginaryFormat = org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()","this.realFormat = imaginaryFormat","if (format == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","this.imaginaryFormat = format","this.realFormat = format","if (imaginaryFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.IMAGINARY_FORMAT);}","if (realFormat == null) {	throw new org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.REAL_FORMAT);}","this.imaginaryFormat = imaginaryFormat","this.realFormat = realFormat","if (imaginaryCharacter == null) {	throw new org.apache.commons.math3.exception.NullArgumentException();}","if (imaginaryCharacter.length() == 0) {	throw new org.apache.commons.math3.exception.NoDataException();}","this.imaginaryCharacter = imaginaryCharacter","return java.text.NumberFormat.getAvailableLocales()","return format(c, new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","return format(new org.apache.commons.math3.complex.Complex(c, 0), new java.lang.StringBuffer(), new java.text.FieldPosition(0)).toString()","pos.setBeginIndex(0)","pos.setEndIndex(0)","org.apache.commons.math3.util.CompositeFormat.formatDouble(re, getRealFormat(), toAppendTo, pos)","toAppendTo.append(" - ")","imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos)","toAppendTo.append(imAppendTo)","toAppendTo.append(getImaginaryCharacter())","toAppendTo.append(" + ")","imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos)","if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","if (im < 0.0) {	toAppendTo.append(" - ");	imAppendTo = formatImaginary(-im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());} else if ((im > 0.0) || java.lang.Double.isNaN(im)) {	toAppendTo.append(" + ");	imAppendTo = formatImaginary(im, new java.lang.StringBuffer(), pos);	toAppendTo.append(imAppendTo);	toAppendTo.append(getImaginaryCharacter());}","return toAppendTo","org.apache.commons.math3.util.CompositeFormat.formatDouble(absIm, getImaginaryFormat(), toAppendTo, pos)","toAppendTo.setLength(0)","if (toAppendTo.toString().equals("1")) {	toAppendTo.setLength(0);}","ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos)","ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos)","if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","if (obj instanceof org.apache.commons.math3.complex.Complex) {	ret = format(((org.apache.commons.math3.complex.Complex) (obj)), toAppendTo, pos);} else if (obj instanceof java.lang.Number) {	ret = format(new org.apache.commons.math3.complex.Complex(((java.lang.Number) (obj)).doubleValue(), 0.0), toAppendTo, pos);} else {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_FORMAT_INSTANCE_AS_COMPLEX, obj.getClass().getName());}","return ret","return imaginaryCharacter","return imaginaryFormat","return org.apache.commons.math3.complex.ComplexFormat.getInstance(java.util.Locale.getDefault())","return new org.apache.commons.math3.complex.ComplexFormat(f)","return new org.apache.commons.math3.complex.ComplexFormat(imaginaryCharacter, f)","return realFormat","if (parsePosition.getIndex() == 0) {	throw new org.apache.commons.math3.exception.MathParseException(source, parsePosition.getErrorIndex(), org.apache.commons.math3.complex.Complex.class);}","org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(source, pos)","pos.setIndex(initialIndex)","return null","if (re == null) {	pos.setIndex(initialIndex);	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), 0.0)","sign = -1","break","sign = 1","pos.setErrorIndex(startIndex)","if (im == null) {	pos.setIndex(initialIndex);	return null;}","if (!org.apache.commons.math3.util.CompositeFormat.parseFixedstring(source, getImaginaryCharacter(), pos)) {	return null;}","return new org.apache.commons.math3.complex.Complex(re.doubleValue(), im.doubleValue() * sign)","if (r < 0) {	throw new org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.LocalizedFormats.NEGATIVE_COMPLEX_MODULE, r);}","return new org.apache.commons.math3.complex.Complex(r * org.apache.commons.math3.util.FastMath.cos(theta), r * org.apache.commons.math3.util.FastMath.sin(theta))","c[i] = new org.apache.commons.math3.complex.Complex(real[i], 0)","return c","this.q0 = a","this.q1 = b","this.q2 = c","this.q3 = d","if (v.length != 3) {	throw new org.apache.commons.math3.exception.DimensionMismatchException(v.length, 3);}","this.q0 = scalar","this.q1 = v[0]","this.q2 = v[1]","this.q3 = v[2]","return new org.apache.commons.math3.complex.Quaternion(q0, -q1, -q2, -q3)","return new org.apache.commons.math3.complex.Quaternion(w, x, y, z)","return org.apache.commons.math3.complex.Quaternion.multiply(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() + q2.getQ0(), q1.getQ1() + q2.getQ1(), q1.getQ2() + q2.getQ2(), q1.getQ3() + q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.add(this, q)","return new org.apache.commons.math3.complex.Quaternion(q1.getQ0() - q2.getQ0(), q1.getQ1() - q2.getQ1(), q1.getQ2() - q2.getQ2(), q1.getQ3() - q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.subtract(this, q)","return (((q1.getQ0() * q2.getQ0()) + (q1.getQ1() * q2.getQ1())) + (q1.getQ2() * q2.getQ2())) + (q1.getQ3() * q2.getQ3())","return org.apache.commons.math3.complex.Quaternion.dotProduct(this, q)","return org.apache.commons.math3.util.FastMath.sqrt((((q0 * q0) + (q1 * q1)) + (q2 * q2)) + (q3 * q3))","if (norm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, norm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / norm, q1 / norm, q2 / norm, q3 / norm)","return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3())","if (other instanceof org.apache.commons.math3.complex.Quaternion) {	final org.apache.commons.math3.complex.Quaternion q = ((org.apache.commons.math3.complex.Quaternion) (other));	return (((q0 == q.getQ0()) && (q1 == q.getQ1())) && (q2 == q.getQ2())) && (q3 == q.getQ3());}","result = (31 * result) + c","return ((org.apache.commons.math3.util.Precision.equals(q0, q.getQ0(), eps) && org.apache.commons.math3.util.Precision.equals(q1, q.getQ1(), eps)) && org.apache.commons.math3.util.Precision.equals(q2, q.getQ2(), eps)) && org.apache.commons.math3.util.Precision.equals(q3, q.getQ3(), eps)","return org.apache.commons.math3.util.Precision.equals(getNorm(), 1.0, eps)","return org.apache.commons.math3.util.FastMath.abs(getQ0()) <= eps","return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3())","return this.normalize()","if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}","if (squareNorm < org.apache.commons.math3.util.Precision.SAFE_MIN) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.NORM, squareNorm);}","return new org.apache.commons.math3.complex.Quaternion(q0 / squareNorm, (-q1) / squareNorm, (-q2) / squareNorm, (-q3) / squareNorm)","return q0","return q1","return q2","return q3","return getQ0()","return new double[]{ getQ1(), getQ2(), getQ3() }","return new org.apache.commons.math3.complex.Quaternion(alpha * q0, alpha * q1, alpha * q2, alpha * q3)","s.append("[").append(q0).append(sp).append(q1).append(sp).append(q2).append(sp).append(q3).append("]")","return s.toString()","omegaCount = 0","omegaReal = null","omegaImaginaryCounterClockwise = null","omegaImaginaryClockwise = null","isCounterClockWise = true","if (omegaCount == 0) {	throw new org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.LocalizedFormats.ROOTS_OF_UNITY_NOT_COMPUTED_YET);}","return isCounterClockWise","if (n == 0) {	throw new org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.LocalizedFormats.CANNOT_COMPUTE_0TH_ROOT_OF_UNITY);}","isCounterClockWise = n > 0","return","if (absN == omegaCount) {	return;}","omegaReal = new double[absN]","omegaImaginaryCounterClockwise = new double[absN]","omegaImaginaryClockwise = new double[absN]","omegaReal[0] = 1.0","omegaImaginaryCounterClockwise[0] = 0.0","omegaImaginaryClockwise[0] = 0.0","omegaReal[i] = (omegaReal[i - 1] * cosT) - (omegaImaginaryCounterClockwise[i - 1] * sinT)","omegaImaginaryCounterClockwise[i] = (omegaReal[i - 1] * sinT) + (omegaImaginaryCounterClockwise[i - 1] * cosT)","omegaImaginaryClockwise[i] = -omegaImaginaryCounterClockwise[i]","omegaCount = absN","if ((k < 0) || (k >= omegaCount)) {	throw new org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.LocalizedFormats.OUT_OF_RANGE_ROOT_OF_UNITY_INDEX, java.lang.Integer.valueOf(k), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(omegaCount - 1));}","return omegaReal[k]","return isCounterClockWise ? omegaImaginaryCounterClockwise[k] : omegaImaginaryClockwise[k]","return omegaCount"]
[DEBUG] DetailLog:460 - choose ingredient: return this.log().multiply(x).exp()
[DEBUG] DetailLog:479 - add used element: return this.log().multiply(x).exp()
[DEBUG] DetailLog:549 - new modification added. element: this
[DEBUG] DetailLog:549 - new modification added. element: this.log()
[DEBUG] DetailLog:549 - new modification added. element: INF
[DEBUG] DetailLog:549 - new modification added. element: this.log().multiply(INF)
[DEBUG] DetailLog:549 - new modification added. element: this.log().multiply(INF).exp()
[DEBUG] DetailLog:188 - variant can not compile or an error happened in testing process(such as do not terminate within wait time or out of memory
[DEBUG] DetailLog:460 - choose ingredient: INF
[DEBUG] DetailLog:479 - add used element: INF
[DEBUG] DetailLog:549 - new modification added. element: INF
[INFO] DetailLog:223 - after generation 1, we got 38 children
[INFO] DetailLog:562 - [Variant id: 38, #gens: 38, #ops: 1, parent:0] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (real == 0.0)
modified: (real > 0.0)
[INFO] DetailLog:562 - [Variant id: 39, #gens: 38, #ops: 1, parent:1] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (real == 0.0)
modified: (!(real == 0.0))
[INFO] DetailLog:562 - [Variant id: 40, #gens: 38, #ops: 1, parent:2] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: 1.0 / ((real * q) + imaginary)
modified: 1.0 / ((real + q) + imaginary)
[INFO] DetailLog:562 - [Variant id: 41, #gens: 38, #ops: 1, parent:3] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (imaginary == 0.0)
modified: (imaginary < 0.0)
[INFO] DetailLog:562 - [Variant id: 42, #gens: 38, #ops: 1, parent:4] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (real == 0.0) && (imaginary == 0.0)
modified: (real != 0.0) && (imaginary == 0.0)
[INFO] DetailLog:562 - [Variant id: 43, #gens: 40, #ops: 1, parent:5] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtIfImpl
operator type: InsertBeforeOp
original: if ((real == 0.0) && (imaginary == 0.0)) {	return org.apache.commons.math3.complex.Complex.NaN;}
modified: org.apache.commons.math3.util.MathUtils.checkNotNull(ZERO)
[INFO] DetailLog:562 - [Variant id: 44, #gens: 43, #ops: 1, parent:6] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 305, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: org.apache.commons.math3.complex.Complex.NaN
modified: org.apache.commons.math3.complex.Complex.I.divide(createComplex(2.0, 0.0))
[INFO] DetailLog:562 - [Variant id: 45, #gens: 38, #ops: 1, parent:7] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (imaginary == 0.0)
modified: (imaginary >= 0.0)
[INFO] DetailLog:562 - [Variant id: 46, #gens: 38, #ops: 1, parent:8] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (real * q)
modified: (real - q)
[INFO] DetailLog:562 - [Variant id: 47, #gens: 40, #ops: 1, parent:9] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: real
modified: (!isNaN)
[INFO] DetailLog:562 - [Variant id: 48, #gens: 38, #ops: 1, parent:10] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)
modified: org.apache.commons.math3.util.FastMath.abs(real) != org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:562 - [Variant id: 49, #gens: 46, #ops: 1, parent:11] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtIfImpl
operator type: InsertBeforeOp
original: if (org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)) {	double q = real / imaginary;	double scale = 1.0 / ((real * q) + imaginary);	return createComplex(scale * q, -scale);} else {	double q = imaginary / real;	double scale = 1.0 / ((imaginary * q) + real);	return createComplex(scale, (-scale) * q);}
modified: if (real > 20.0) {	return createComplex(1.0, 0.0);}
[INFO] DetailLog:562 - [Variant id: 50, #gens: 40, #ops: 1, parent:12] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: real
modified: java.lang.Double.isInfinite(NaN.imaginary)
[INFO] DetailLog:562 - [Variant id: 51, #gens: 36, #ops: 1, parent:13] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: ((real * q) + imaginary)
modified: org.apache.commons.math3.util.MathUtils.hash(real)
[INFO] DetailLog:562 - [Variant id: 52, #gens: 38, #ops: 1, parent:14] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: imaginary / real
modified: imaginary - real
[INFO] DetailLog:562 - [Variant id: 53, #gens: 38, #ops: 1, parent:15] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: ((imaginary * q) + real)
modified: ((imaginary * q) * real)
[INFO] DetailLog:562 - [Variant id: 54, #gens: 38, #ops: 1, parent:16] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)
modified: org.apache.commons.math3.util.FastMath.abs(real) >= org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:562 - [Variant id: 55, #gens: 42, #ops: 1, parent:17] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: real
modified: (17 * org.apache.commons.math3.util.MathUtils.hash(imaginary))
[INFO] DetailLog:562 - [Variant id: 56, #gens: 37, #ops: 1, parent:18] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: ((imaginary * q) + real)
modified: (imaginary == 0.0)
[INFO] DetailLog:562 - [Variant id: 57, #gens: 38, #ops: 1, parent:19] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: ((real * q) + imaginary)
modified: ((real * q) % imaginary)
[INFO] DetailLog:562 - [Variant id: 58, #gens: 37, #ops: 1, parent:20] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: (imaginary * q)
modified: ZERO.getImaginary()
[INFO] DetailLog:562 - [Variant id: 59, #gens: 41, #ops: 1, parent:21] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: (imaginary * q)
modified: (org.apache.commons.math3.util.FastMath.abs(real) + abs())
[INFO] DetailLog:562 - [Variant id: 60, #gens: 40, #ops: 1, parent:22] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: imaginary / real
modified: imaginary - ZERO.getImaginary()
[INFO] DetailLog:562 - [Variant id: 61, #gens: 40, #ops: 1, parent:23] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtLocalVariableImpl
operator type: InsertAfterOp
original: double scale = 1.0 / ((real * q) + imaginary)
modified: return isNaN
[INFO] DetailLog:562 - [Variant id: 62, #gens: 38, #ops: 1, parent:24] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: ((imaginary * q) + real)
modified: ((imaginary * q) * real)
[INFO] DetailLog:562 - [Variant id: 63, #gens: 34, #ops: 1, parent:25] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: 1.0 / ((real * q) + imaginary)
modified: org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:562 - [Variant id: 64, #gens: 38, #ops: 1, parent:26] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 313, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: real / imaginary
modified: real + imaginary
[INFO] DetailLog:562 - [Variant id: 65, #gens: 59, #ops: 1, parent:27] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 317, pointed element: CtLocalVariableImpl
operator type: InsertBeforeOp
original: double q = imaginary / real
modified: if (getQ0() < 0) {	final org.apache.commons.math3.complex.Quaternion unitQ = normalize();	return new org.apache.commons.math3.complex.Quaternion(-unitQ.getQ0(), -unitQ.getQ1(), -unitQ.getQ2(), -unitQ.getQ3());} else {	return this.normalize();}
[INFO] DetailLog:562 - [Variant id: 66, #gens: 38, #ops: 1, parent:28] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 312, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: org.apache.commons.math3.util.FastMath.abs(real) < org.apache.commons.math3.util.FastMath.abs(imaginary)
modified: org.apache.commons.math3.util.FastMath.abs(real) > org.apache.commons.math3.util.FastMath.abs(imaginary)
[INFO] DetailLog:562 - [Variant id: 67, #gens: 40, #ops: 1, parent:29] fitness: 3.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: 1.0 / ((real * q) + imaginary)
modified: 1.0 / ((imaginary * q) + real)
[INFO] DetailLog:562 - [Variant id: 68, #gens: 36, #ops: 1, parent:30] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 314, pointed element: CtBinaryOperatorImpl
operator type: ReplaceExpressionOp
original: (real * q)
modified: true
[INFO] DetailLog:562 - [Variant id: 69, #gens: 38, #ops: 1, parent:31] fitness: 1.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: (real == 0.0)
modified: (real > 0.0)
[INFO] DetailLog:562 - [Variant id: 70, #gens: 38, #ops: 1, parent:32] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: 1.0 / ((imaginary * q) + real)
modified: 1.0 * ((imaginary * q) + real)
[INFO] DetailLog:562 - [Variant id: 71, #gens: 38, #ops: 1, parent:33] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: ((imaginary * q) + real)
modified: ((imaginary % q) + real)
[INFO] DetailLog:562 - [Variant id: 72, #gens: 42, #ops: 1, parent:34] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 304, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: real
modified: (real < (-20.0))
[INFO] DetailLog:562 - [Variant id: 73, #gens: 43, #ops: 1, parent:35] fitness: 1.7976931348623157E308
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtLocalVariableImpl
operator type: InsertAfterOp
original: double scale = 1.0 / ((imaginary * q) + real)
modified: return this.log().multiply(INF).exp()
[INFO] DetailLog:562 - [Variant id: 74 (SOL) , #gens: 38, #ops: 1, parent:36] fitness: 0.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 305, pointed element: CtFieldReadImpl
operator type: ReplaceExpressionOp
original: org.apache.commons.math3.complex.Complex.NaN
modified: INF
[INFO] DetailLog:562 - [Variant id: 75, #gens: 38, #ops: 1, parent:37] fitness: 2.0
operation instances at generation: 1
modification point: MP=org.apache.commons.math3.complex.Complex line: 318, pointed element: CtBinaryOperatorImpl
operator type: BinaryExpressionMutOp
original: 1.0 / ((imaginary * q) + real)
modified: 1.0 % ((imaginary * q) + real)
